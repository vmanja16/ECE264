==4686== Memcheck, a memory error detector
==4686== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==4686== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==4686== Command: ./catlite who - where
==4686== Parent PID: 31616
==4686== 
--4686-- 
--4686-- Valgrind options:
--4686--    --tool=memcheck
--4686--    --leak-check=full
--4686--    --verbose
--4686--    --log-file=memcheck.log
--4686-- Contents of /proc/version:
--4686--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--4686-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--4686-- Page sizes: currently 4096, max supported 4096
--4686-- Valgrind library directory: /usr/lib64/valgrind
--4686-- Reading syms from /home/shay/a/vmanja/ECE264/solutions/demo/PA04/catlite
--4686-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--4686--    object doesn't have a dynamic symbol table
--4686-- Reading syms from /lib64/ld-2.12.so
--4686--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--4686--   .. build-id is valid
--4686-- Scheduler: using generic scheduler lock implementation.
--4686-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==4686== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-4686-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==4686== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-4686-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==4686== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-4686-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==4686== 
==4686== TO CONTROL THIS PROCESS USING vgdb (which you probably
==4686== don't want to do, unless you know exactly what you're doing,
==4686== or are doing some strange experiment):
==4686==   /usr/lib64/valgrind/../../bin/vgdb --pid=4686 ...command...
==4686== 
==4686== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==4686==   /path/to/gdb ./catlite
==4686== and then give GDB the following command
==4686==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=4686
==4686== --pid is optional if only one valgrind process is running
==4686== 
--4686-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--4686-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--4686-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--4686-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--4686-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--4686-- Reading syms from /lib64/libc-2.12.so
--4686--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--4686--   .. build-id is valid
--4686-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--4686-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--4686-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--4686-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--4686-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
--4686-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--4686-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--4686-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
==4686== Invalid read of size 4
==4686==    at 0x3F79E6E530: feof (feof.c:37)
==4686==    by 0x40077A: main (cat-lite.c:35)
==4686==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==4686== 
==4686== 
==4686== Process terminating with default action of signal 11 (SIGSEGV)
==4686==  Access not within mapped region at address 0x0
==4686==    at 0x3F79E6E530: feof (feof.c:37)
==4686==    by 0x40077A: main (cat-lite.c:35)
==4686==  If you believe this happened as a result of a stack
==4686==  overflow in your program's main thread (unlikely but
==4686==  possible), you can try to increase the size of the
==4686==  main thread stack using the --main-stacksize= flag.
==4686==  The main thread stack size used in this run was 10485760.
==4686== 
==4686== HEAP SUMMARY:
==4686==     in use at exit: 0 bytes in 0 blocks
==4686==   total heap usage: 2 allocs, 2 frees, 1,136 bytes allocated
==4686== 
==4686== All heap blocks were freed -- no leaks are possible
==4686== 
==4686== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
==4686== 
==4686== 1 errors in context 1 of 1:
==4686== Invalid read of size 4
==4686==    at 0x3F79E6E530: feof (feof.c:37)
==4686==    by 0x40077A: main (cat-lite.c:35)
==4686==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==4686== 
--4686-- 
--4686-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--4686-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==4686== 
==4686== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
