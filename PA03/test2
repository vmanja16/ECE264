Script started on Thu 18 Sep 2014 04:22:26 AM EDT
]0;~/ECE264/solutions/demo/PA03
[32mvmanja@ecegrid-thin1 [33m~/ECE264/solutions/demo/PA03[0m
$ ./tester answer03.c
answer03.c: In function â€˜explodeâ€™:
answer03.c:96: warning: format â€˜%dâ€™ expects type â€˜intâ€™, but argument 2 has type â€˜long unsigned intâ€™
   ---------------------------------------------------------------------------
   Welcome to the PA03 testing program. This program takes a _long_ time
   to execute. There is a reason for this. You should not rely on this
   program to test your code as you go. Instead, you should think about
   what your code should be doing, and what inputs should produce what
   outputs for each of your functions.
   
        YOU SHOULD THEN TEST EVERY PIECE OF CODE AS YOU WRITE IT 
   
                                 AND 
   
                        FIX MISTAKES AS YOU GO.
   
   When you are convinced that you have the entire assignment 100%% correct,
   then you can use this testing program to test it. 
   
   This will give you your mark assuming that you submit it correctly, and 
   there are no other irregularities.
   ---------------------------------------------------------------------------

test 01 :: passing NULL to strcat_ex()

   const char * z2 = "How did it get so late so soon?";
   char * s1 = NULL;
   int n;
   char * s2 = strcat_ex(&s1, &n, z2);
   // s1 = 0x4c3c040: "How did it get so late so soon?"
   // s2 = 0x4c3c040
   // n = 63
   (pass.)

test 02 :: passing NULL to strcat_ex()

   const char * z0 = "";
   char * s1 = NULL;
   int n;
   char * s2 = strcat_ex(&s1, &n, z0);
   // s1 = 0x4c3c040: ""
   // s2 = 0x4c3c040
   // n = 1
   (pass.)

test 03 :: no reallocate

   const char * z2 = "How did it get so late so soon?";
   int n = 2048;
   char * s1 = malloc(n);
   char * s3 = s1; // keep a copy
   s1[0] = '\0';
   char * s2 = strcat_ex(&s1, &n, z2);
   // s1 = 0x4c3c040: "How did it get so late so soon?"
   // s2 = 0x4c3c040
   // s3 = 0x4c3c040
   // n = 2048
   (pass.)

test 04 :: force reallocate

   const char * z2 = "How did it get so late so soon?";
   const char * s0 = "Hal, ";
   char * s1 = strdup(s0);
   int n = strlen(s0);
   char * s2 = strcat_ex(&s1, &n, z2);
   // s1 = 0x4c3c090: "Hal, How did it get so late so soon?"
   // s2 = 0x4c3c090
   // n = 73
   (pass.)

test 5 :: explode(...)

   const char * str = "The\nTuring test";
   const char * delims = " \n";
   int n;
   char * * strArr = explode(std, delims, &n);


 
N = 2
Value of Current is 3
Value of Current-Previous + 1 is 4
Bytes Allocated = 4
 strArr[0] is The
Value of Current is 10
Value of Current-Previous + 1 is 7
Bytes Allocated = 7
 strArr[1] is Turing
Value of Current is 15
Value of Current-Previous + 1 is 5
Bytes Allocated = 5
 strArr[2] is test
   // strArr[0] is "The"
   // strArr[1] is "Turing"
   // strArr[2] is "test"
   (pass.)
Memory errors detected, testcase failed.
==27953== Conditional jump or move depends on uninitialised value(s)
==27953==    at 0x3F79E47E3C: vfprintf (vfprintf.c:1641)
==27953==    by 0x3F79E4F199: printf (printf.c:35)
==27953==    by 0x402B00: explode (answer03.c:105)
==27953==    by 0x401934: test_explode_XX (<stdin>:338)
==27953==    by 0x40243B: main (<stdin>:571)
==27953== 
--27953-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--27953-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==27953== Conditional jump or move depends on uninitialised value(s)
==27953==    at 0x4A084B0: strcmp (mc_replace_strmem.c:729)
==27953==    by 0x40199B: test_explode_XX (<stdin>:345)
==27953==    by 0x40243B: main (<stdin>:571)
==27953== 
==27953== Conditional jump or move depends on uninitialised value(s)
==27953==    at 0x4A084B4: strcmp (mc_replace_strmem.c:729)
==27953==    by 0x40199B: test_explode_XX (<stdin>:345)
==27953==    by 0x40243B: main (<stdin>:571)
==27953== 
==27953== Conditional jump or move depends on uninitialised value(s)
==27953==    at 0x400B1C: print_packed (<stdin>:14)
==27953==    by 0x4019F2: test_explode_XX (<stdin>:352)
==27953==    by 0x40243B: main (<stdin>:571)
==27953== 
==27953== 
==27953== HEAP SUMMARY:
==27953==     in use at exit: 0 bytes in 0 blocks
==27953==   total heap usage: 8 allocs, 8 frees, 80 bytes allocated
==27953== 
==27953== All heap blocks were freed -- no leaks are possible
==27953== 
==27953== Use --track-origins=yes to see where uninitialised values come from
==27953== ERROR SUMMARY: 12 errors from 4 contexts (suppressed: 6 from 6)
==27953== 
==27953== 3 errors in context 1 of 4:
==27953== Conditional jump or move depends on uninitialised value(s)
==27953==    at 0x400B1C: print_packed (<stdin>:14)
==27953==    by 0x4019F2: test_explode_XX (<stdin>:352)
==27953==    by 0x40243B: main (<stdin>:571)
==27953== 
==27953== 
==27953== 3 errors in context 2 of 4:
==27953== Conditional jump or move depends on uninitialised value(s)
==27953==    at 0x4A084B4: strcmp (mc_replace_strmem.c:729)
==27953==    by 0x40199B: test_explode_XX (<stdin>:345)
==27953==    by 0x40243B: main (<stdin>:571)
==27953== 
==27953== 
==27953== 3 errors in context 3 of 4:
==27953== Conditional jump or move depends on uninitialised value(s)
==27953==    at 0x4A084B0: strcmp (mc_replace_strmem.c:729)
==27953==    by 0x40199B: test_explode_XX (<stdin>:345)
==27953==    by 0x40243B: main (<stdin>:571)
==27953== 
==27953== 
==27953== 3 errors in context 4 of 4:
==27953== Conditional jump or move depends on uninitialised value(s)
==27953==    at 0x3F79E47E3C: vfprintf (vfprintf.c:1641)
==27953==    by 0x3F79E4F199: printf (printf.c:35)
==27953==    by 0x402B00: explode (answer03.c:105)
==27953==    by 0x401934: test_explode_XX (<stdin>:338)
==27953==    by 0x40243B: main (<stdin>:571)
==27953== 
--27953-- 
--27953-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--27953-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==27953== 
==27953== ERROR SUMMARY: 12 errors from 4 contexts (suppressed: 6 from 6)

test 6 :: explode(...)

   const char * str = "lady beatle brew";
   const char * delims = " ";
   int n;
   char * * strArr = explode(std, delims, &n);
 
 
N = 2
Value of Current is 4
Value of Current-Previous + 1 is 5
Bytes Allocated = 5
 strArr[0] is lady
Value of Current is 11
Value of Current-Previous + 1 is 7
Bytes Allocated = 7
 strArr[1] is beatle
Value of Current is 16
Value of Current-Previous + 1 is 5
Bytes Allocated = 5
 strArr[2] is brew
   // strArr[0] is "lady"
   // strArr[1] is "beatle"
   // strArr[2] is "brew"
   (pass.)
Memory errors detected, testcase failed.
==922== Memcheck, a memory error detector
==922== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==922== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==922== Command: /tmp/.EjTAb9/a.out 5
==922== Parent PID: 921
==922== 
--922-- 
--922-- Valgrind options:
--922--    --tool=memcheck
--922--    --leak-check=full
--922--    --verbose
--922--    --log-file=memcheck.log
--922-- Contents of /proc/version:
--922--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--922-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--922-- Page sizes: currently 4096, max supported 4096
--922-- Valgrind library directory: /usr/lib64/valgrind
--922-- Reading syms from /tmp/.EjTAb9/a.out
--922-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--922--    object doesn't have a dynamic symbol table
--922-- Reading syms from /lib64/ld-2.12.so
--922--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--922--   .. build-id is valid
--922-- Scheduler: using generic scheduler lock implementation.
--922-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==922== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-922-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==922== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-922-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==922== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-922-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==922== 
==922== TO CONTROL THIS PROCESS USING vgdb (which you probably
==922== don't want to do, unless you know exactly what you're doing,
==922== or are doing some strange experiment):
==922==   /usr/lib64/valgrind/../../bin/vgdb --pid=922 ...command...
==922== 
==922== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==922==   /path/to/gdb /tmp/.EjTAb9/a.out
==922== and then give GDB the following command
==922==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=922
==922== --pid is optional if only one valgrind process is running
==922== 
--922-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--922-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--922-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--922-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--922-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--922-- Reading syms from /lib64/libc-2.12.so
--922--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--922--   .. build-id is valid
--922-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--922-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--922-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--922-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--922-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--922-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--922-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--922-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--922-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--922-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--922-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
==922== Conditional jump or move depends on uninitialised value(s)
==922==    at 0x3F79E47E3C: vfprintf (vfprintf.c:1641)
==922==    by 0x3F79E4F199: printf (printf.c:35)
==922==    by 0x402B00: explode (answer03.c:105)
==922==    by 0x401934: test_explode_XX (<stdin>:338)
==922==    by 0x402454: main (<stdin>:572)
==922== 
--922-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--922-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==922== Conditional jump or move depends on uninitialised value(s)
==922==    at 0x4A084B0: strcmp (mc_replace_strmem.c:729)
==922==    by 0x40199B: test_explode_XX (<stdin>:345)
==922==    by 0x402454: main (<stdin>:572)
==922== 
==922== Conditional jump or move depends on uninitialised value(s)
==922==    at 0x4A084B4: strcmp (mc_replace_strmem.c:729)
==922==    by 0x40199B: test_explode_XX (<stdin>:345)
==922==    by 0x402454: main (<stdin>:572)
==922== 
==922== Conditional jump or move depends on uninitialised value(s)
==922==    at 0x400B1C: print_packed (<stdin>:14)
==922==    by 0x4019F2: test_explode_XX (<stdin>:352)
==922==    by 0x402454: main (<stdin>:572)
==922== 
==922== 
==922== HEAP SUMMARY:
==922==     in use at exit: 0 bytes in 0 blocks
==922==   total heap usage: 8 allocs, 8 frees, 82 bytes allocated
==922== 
==922== All heap blocks were freed -- no leaks are possible
==922== 
==922== Use --track-origins=yes to see where uninitialised values come from
==922== ERROR SUMMARY: 12 errors from 4 contexts (suppressed: 6 from 6)
==922== 
==922== 3 errors in context 1 of 4:
==922== Conditional jump or move depends on uninitialised value(s)
==922==    at 0x400B1C: print_packed (<stdin>:14)
==922==    by 0x4019F2: test_explode_XX (<stdin>:352)
==922==    by 0x402454: main (<stdin>:572)
==922== 
==922== 
==922== 3 errors in context 2 of 4:
==922== Conditional jump or move depends on uninitialised value(s)
==922==    at 0x4A084B4: strcmp (mc_replace_strmem.c:729)
==922==    by 0x40199B: test_explode_XX (<stdin>:345)
==922==    by 0x402454: main (<stdin>:572)
==922== 
==922== 
==922== 3 errors in context 3 of 4:
==922== Conditional jump or move depends on uninitialised value(s)
==922==    at 0x4A084B0: strcmp (mc_replace_strmem.c:729)
==922==    by 0x40199B: test_explode_XX (<stdin>:345)
==922==    by 0x402454: main (<stdin>:572)
==922== 
==922== 
==922== 3 errors in context 4 of 4:
==922== Conditional jump or move depends on uninitialised value(s)
==922==    at 0x3F79E47E3C: vfprintf (vfprintf.c:1641)
==922==    by 0x3F79E4F199: printf (printf.c:35)
==922==    by 0x402B00: explode (answer03.c:105)
==922==    by 0x401934: test_explode_XX (<stdin>:338)
==922==    by 0x402454: main (<stdin>:572)
==922== 
--922-- 
--922-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--922-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==922== 
==922== ERROR SUMMARY: 12 errors from 4 contexts (suppressed: 6 from 6)

test 7 :: explode(...)

   const char * str = "The\nTuring test";
   const char * delims = "";
   int n;
   char * * strArr = explode(std, delims, &n);
N = 0
Value of Current is 15
Value of Current-Previous + 1 is 16
Bytes Allocated = 16
 strArr[0] is The
Turing test
   // strArr[0] is "The\nTuring test"
   (pass.)
Memory errors detected, testcase failed.
==6600== Memcheck, a memory error detector
==6600== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==6600== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==6600== Command: /tmp/.EjTAb9/a.out 6
==6600== Parent PID: 6599
==6600== 
--6600-- 
--6600-- Valgrind options:
--6600--    --tool=memcheck
--6600--    --leak-check=full
--6600--    --verbose
--6600--    --log-file=memcheck.log
--6600-- Contents of /proc/version:
--6600--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--6600-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--6600-- Page sizes: currently 4096, max supported 4096
--6600-- Valgrind library directory: /usr/lib64/valgrind
--6600-- Reading syms from /tmp/.EjTAb9/a.out
--6600-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--6600--    object doesn't have a dynamic symbol table
--6600-- Reading syms from /lib64/ld-2.12.so
--6600--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--6600--   .. build-id is valid
--6600-- Scheduler: using generic scheduler lock implementation.
--6600-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==6600== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-6600-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==6600== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-6600-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==6600== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-6600-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==6600== 
==6600== TO CONTROL THIS PROCESS USING vgdb (which you probably
==6600== don't want to do, unless you know exactly what you're doing,
==6600== or are doing some strange experiment):
==6600==   /usr/lib64/valgrind/../../bin/vgdb --pid=6600 ...command...
==6600== 
==6600== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==6600==   /path/to/gdb /tmp/.EjTAb9/a.out
==6600== and then give GDB the following command
==6600==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=6600
==6600== --pid is optional if only one valgrind process is running
==6600== 
--6600-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--6600-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--6600-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--6600-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--6600-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--6600-- Reading syms from /lib64/libc-2.12.so
--6600--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--6600--   .. build-id is valid
--6600-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--6600-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--6600-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--6600-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--6600-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--6600-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--6600-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--6600-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--6600-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--6600-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--6600-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
==6600== Conditional jump or move depends on uninitialised value(s)
==6600==    at 0x3F79E47E3C: vfprintf (vfprintf.c:1641)
==6600==    by 0x3F79E4F199: printf (printf.c:35)
==6600==    by 0x402B00: explode (answer03.c:105)
==6600==    by 0x401934: test_explode_XX (<stdin>:338)
==6600==    by 0x40246D: main (<stdin>:573)
==6600== 
--6600-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--6600-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==6600== Conditional jump or move depends on uninitialised value(s)
==6600==    at 0x4A084B0: strcmp (mc_replace_strmem.c:729)
==6600==    by 0x40199B: test_explode_XX (<stdin>:345)
==6600==    by 0x40246D: main (<stdin>:573)
==6600== 
==6600== Conditional jump or move depends on uninitialised value(s)
==6600==    at 0x4A084B4: strcmp (mc_replace_strmem.c:729)
==6600==    by 0x40199B: test_explode_XX (<stdin>:345)
==6600==    by 0x40246D: main (<stdin>:573)
==6600== 
==6600== Conditional jump or move depends on uninitialised value(s)
==6600==    at 0x400B1C: print_packed (<stdin>:14)
==6600==    by 0x4019F2: test_explode_XX (<stdin>:352)
==6600==    by 0x40246D: main (<stdin>:573)
==6600== 
==6600== 
==6600== HEAP SUMMARY:
==6600==     in use at exit: 0 bytes in 0 blocks
==6600==   total heap usage: 4 allocs, 4 frees, 48 bytes allocated
==6600== 
==6600== All heap blocks were freed -- no leaks are possible
==6600== 
==6600== Use --track-origins=yes to see where uninitialised values come from
==6600== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 6 from 6)
==6600== 
==6600== 1 errors in context 1 of 4:
==6600== Conditional jump or move depends on uninitialised value(s)
==6600==    at 0x400B1C: print_packed (<stdin>:14)
==6600==    by 0x4019F2: test_explode_XX (<stdin>:352)
==6600==    by 0x40246D: main (<stdin>:573)
==6600== 
==6600== 
==6600== 1 errors in context 2 of 4:
==6600== Conditional jump or move depends on uninitialised value(s)
==6600==    at 0x4A084B4: strcmp (mc_replace_strmem.c:729)
==6600==    by 0x40199B: test_explode_XX (<stdin>:345)
==6600==    by 0x40246D: main (<stdin>:573)
==6600== 
==6600== 
==6600== 1 errors in context 3 of 4:
==6600== Conditional jump or move depends on uninitialised value(s)
==6600==    at 0x4A084B0: strcmp (mc_replace_strmem.c:729)
==6600==    by 0x40199B: test_explode_XX (<stdin>:345)
==6600==    by 0x40246D: main (<stdin>:573)
==6600== 
==6600== 
==6600== 1 errors in context 4 of 4:
==6600== Conditional jump or move depends on uninitialised value(s)
==6600==    at 0x3F79E47E3C: vfprintf (vfprintf.c:1641)
==6600==    by 0x3F79E4F199: printf (printf.c:35)
==6600==    by 0x402B00: explode (answer03.c:105)
==6600==    by 0x401934: test_explode_XX (<stdin>:338)
==6600==    by 0x40246D: main (<stdin>:573)
==6600== 
--6600-- 
--6600-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--6600-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==6600== 
==6600== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 6 from 6)

test 8 :: explode(...)

   const char * str = "The\nTuring test";
   const char * delims = "\n";
   int n;
   char * * strArr = explode(std, delims, &n);


N = 1
Value of Current is 3
Value of Current-Previous + 1 is 4
Bytes Allocated = 4
 strArr[0] is The
Value of Current is 15
Value of Current-Previous + 1 is 12
Bytes Allocated = 12
 strArr[1] is Turing test
   // strArr[0] is "The"
   // strArr[1] is "Turing test"
   (pass.)
Memory errors detected, testcase failed.
==11939== Memcheck, a memory error detector
==11939== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==11939== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==11939== Command: /tmp/.EjTAb9/a.out 7
==11939== Parent PID: 11938
==11939== 
--11939-- 
--11939-- Valgrind options:
--11939--    --tool=memcheck
--11939--    --leak-check=full
--11939--    --verbose
--11939--    --log-file=memcheck.log
--11939-- Contents of /proc/version:
--11939--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--11939-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--11939-- Page sizes: currently 4096, max supported 4096
--11939-- Valgrind library directory: /usr/lib64/valgrind
--11939-- Reading syms from /tmp/.EjTAb9/a.out
--11939-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--11939--    object doesn't have a dynamic symbol table
--11939-- Reading syms from /lib64/ld-2.12.so
--11939--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--11939--   .. build-id is valid
--11939-- Scheduler: using generic scheduler lock implementation.
--11939-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==11939== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-11939-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==11939== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-11939-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==11939== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-11939-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==11939== 
==11939== TO CONTROL THIS PROCESS USING vgdb (which you probably
==11939== don't want to do, unless you know exactly what you're doing,
==11939== or are doing some strange experiment):
==11939==   /usr/lib64/valgrind/../../bin/vgdb --pid=11939 ...command...
==11939== 
==11939== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==11939==   /path/to/gdb /tmp/.EjTAb9/a.out
==11939== and then give GDB the following command
==11939==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=11939
==11939== --pid is optional if only one valgrind process is running
==11939== 
--11939-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--11939-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--11939-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--11939-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--11939-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--11939-- Reading syms from /lib64/libc-2.12.so
--11939--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--11939--   .. build-id is valid
--11939-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--11939-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--11939-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--11939-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--11939-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--11939-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--11939-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--11939-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--11939-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--11939-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--11939-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
==11939== Conditional jump or move depends on uninitialised value(s)
==11939==    at 0x3F79E47E3C: vfprintf (vfprintf.c:1641)
==11939==    by 0x3F79E4F199: printf (printf.c:35)
==11939==    by 0x402B00: explode (answer03.c:105)
==11939==    by 0x401934: test_explode_XX (<stdin>:338)
==11939==    by 0x402486: main (<stdin>:574)
==11939== 
--11939-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--11939-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==11939== Conditional jump or move depends on uninitialised value(s)
==11939==    at 0x4A084B0: strcmp (mc_replace_strmem.c:729)
==11939==    by 0x40199B: test_explode_XX (<stdin>:345)
==11939==    by 0x402486: main (<stdin>:574)
==11939== 
==11939== Conditional jump or move depends on uninitialised value(s)
==11939==    at 0x4A084B4: strcmp (mc_replace_strmem.c:729)
==11939==    by 0x40199B: test_explode_XX (<stdin>:345)
==11939==    by 0x402486: main (<stdin>:574)
==11939== 
==11939== Conditional jump or move depends on uninitialised value(s)
==11939==    at 0x400B1C: print_packed (<stdin>:14)
==11939==    by 0x4019F2: test_explode_XX (<stdin>:352)
==11939==    by 0x402486: main (<stdin>:574)
==11939== 
==11939== 
==11939== HEAP SUMMARY:
==11939==     in use at exit: 0 bytes in 0 blocks
==11939==   total heap usage: 6 allocs, 6 frees, 64 bytes allocated
==11939== 
==11939== All heap blocks were freed -- no leaks are possible
==11939== 
==11939== Use --track-origins=yes to see where uninitialised values come from
==11939== ERROR SUMMARY: 8 errors from 4 contexts (suppressed: 6 from 6)
==11939== 
==11939== 2 errors in context 1 of 4:
==11939== Conditional jump or move depends on uninitialised value(s)
==11939==    at 0x400B1C: print_packed (<stdin>:14)
==11939==    by 0x4019F2: test_explode_XX (<stdin>:352)
==11939==    by 0x402486: main (<stdin>:574)
==11939== 
==11939== 
==11939== 2 errors in context 2 of 4:
==11939== Conditional jump or move depends on uninitialised value(s)
==11939==    at 0x4A084B4: strcmp (mc_replace_strmem.c:729)
==11939==    by 0x40199B: test_explode_XX (<stdin>:345)
==11939==    by 0x402486: main (<stdin>:574)
==11939== 
==11939== 
==11939== 2 errors in context 3 of 4:
==11939== Conditional jump or move depends on uninitialised value(s)
==11939==    at 0x4A084B0: strcmp (mc_replace_strmem.c:729)
==11939==    by 0x40199B: test_explode_XX (<stdin>:345)
==11939==    by 0x402486: main (<stdin>:574)
==11939== 
==11939== 
==11939== 2 errors in context 4 of 4:
==11939== Conditional jump or move depends on uninitialised value(s)
==11939==    at 0x3F79E47E3C: vfprintf (vfprintf.c:1641)
==11939==    by 0x3F79E4F199: printf (printf.c:35)
==11939==    by 0x402B00: explode (answer03.c:105)
==11939==    by 0x401934: test_explode_XX (<stdin>:338)
==11939==    by 0x402486: main (<stdin>:574)
==11939== 
--11939-- 
--11939-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--11939-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==11939== 
==11939== ERROR SUMMARY: 8 errors from 4 contexts (suppressed: 6 from 6)

test 9 :: explode(...)

   const char * str = "The\nTuring test";
   const char * delims = "Tt";
   int n;
   char * * strArr = explode(std, delims, &n);
T
T
t
t
N = 4
Value of Current is 0
Value of Current-Previous + 1 is 1
Bytes Allocated = 1
 strArr[0] is 
Value of Current is 4
Value of Current-Previous + 1 is 4
Bytes Allocated = 4
 strArr[1] is he

Value of Current is 11
Value of Current-Previous + 1 is 7
Bytes Allocated = 7
 strArr[2] is uring 
Value of Current is 14
Value of Current-Previous + 1 is 3
Bytes Allocated = 3
 strArr[3] is es
Value of Current is 15
Value of Current-Previous + 1 is 1
Bytes Allocated = 1
 strArr[4] is 
   // strArr[0] is ""
   // strArr[1] is "he\n"
   // strArr[2] is "uring "
   // strArr[3] is "es"
   // strArr[4] is ""
   (pass.)
Memory errors detected, testcase failed.
==17463== Memcheck, a memory error detector
==17463== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==17463== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==17463== Command: /tmp/.EjTAb9/a.out 8
==17463== Parent PID: 17461
==17463== 
--17463-- 
--17463-- Valgrind options:
--17463--    --tool=memcheck
--17463--    --leak-check=full
--17463--    --verbose
--17463--    --log-file=memcheck.log
--17463-- Contents of /proc/version:
--17463--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--17463-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--17463-- Page sizes: currently 4096, max supported 4096
--17463-- Valgrind library directory: /usr/lib64/valgrind
--17463-- Reading syms from /tmp/.EjTAb9/a.out
--17463-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--17463--    object doesn't have a dynamic symbol table
--17463-- Reading syms from /lib64/ld-2.12.so
--17463--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--17463--   .. build-id is valid
--17463-- Scheduler: using generic scheduler lock implementation.
--17463-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==17463== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-17463-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==17463== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-17463-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==17463== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-17463-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==17463== 
==17463== TO CONTROL THIS PROCESS USING vgdb (which you probably
==17463== don't want to do, unless you know exactly what you're doing,
==17463== or are doing some strange experiment):
==17463==   /usr/lib64/valgrind/../../bin/vgdb --pid=17463 ...command...
==17463== 
==17463== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==17463==   /path/to/gdb /tmp/.EjTAb9/a.out
==17463== and then give GDB the following command
==17463==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=17463
==17463== --pid is optional if only one valgrind process is running
==17463== 
--17463-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--17463-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--17463-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--17463-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--17463-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--17463-- Reading syms from /lib64/libc-2.12.so
--17463--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--17463--   .. build-id is valid
--17463-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--17463-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--17463-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--17463-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--17463-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--17463-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--17463-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--17463-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--17463-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--17463-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--17463-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
==17463== Conditional jump or move depends on uninitialised value(s)
==17463==    at 0x3F79E47E3C: vfprintf (vfprintf.c:1641)
==17463==    by 0x3F79E4F199: printf (printf.c:35)
==17463==    by 0x402B00: explode (answer03.c:105)
==17463==    by 0x401934: test_explode_XX (<stdin>:338)
==17463==    by 0x40249F: main (<stdin>:575)
==17463== 
--17463-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--17463-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==17463== Conditional jump or move depends on uninitialised value(s)
==17463==    at 0x4A0849C: strcmp (mc_replace_strmem.c:729)
==17463==    by 0x40199B: test_explode_XX (<stdin>:345)
==17463==    by 0x40249F: main (<stdin>:575)
==17463== 
==17463== Conditional jump or move depends on uninitialised value(s)
==17463==    at 0x4A084B4: strcmp (mc_replace_strmem.c:729)
==17463==    by 0x40199B: test_explode_XX (<stdin>:345)
==17463==    by 0x40249F: main (<stdin>:575)
==17463== 
==17463== Conditional jump or move depends on uninitialised value(s)
==17463==    at 0x4A084B0: strcmp (mc_replace_strmem.c:729)
==17463==    by 0x40199B: test_explode_XX (<stdin>:345)
==17463==    by 0x40249F: main (<stdin>:575)
==17463== 
==17463== Conditional jump or move depends on uninitialised value(s)
==17463==    at 0x400B1C: print_packed (<stdin>:14)
==17463==    by 0x4019F2: test_explode_XX (<stdin>:352)
==17463==    by 0x40249F: main (<stdin>:575)
==17463== 
==17463== 
==17463== HEAP SUMMARY:
==17463==     in use at exit: 0 bytes in 0 blocks
==17463==   total heap usage: 12 allocs, 12 frees, 112 bytes allocated
==17463== 
==17463== All heap blocks were freed -- no leaks are possible
==17463== 
==17463== Use --track-origins=yes to see where uninitialised values come from
==17463== ERROR SUMMARY: 20 errors from 5 contexts (suppressed: 6 from 6)
==17463== 
==17463== 2 errors in context 1 of 5:
==17463== Conditional jump or move depends on uninitialised value(s)
==17463==    at 0x4A0849C: strcmp (mc_replace_strmem.c:729)
==17463==    by 0x40199B: test_explode_XX (<stdin>:345)
==17463==    by 0x40249F: main (<stdin>:575)
==17463== 
==17463== 
==17463== 3 errors in context 2 of 5:
==17463== Conditional jump or move depends on uninitialised value(s)
==17463==    at 0x4A084B0: strcmp (mc_replace_strmem.c:729)
==17463==    by 0x40199B: test_explode_XX (<stdin>:345)
==17463==    by 0x40249F: main (<stdin>:575)
==17463== 
==17463== 
==17463== 5 errors in context 3 of 5:
==17463== Conditional jump or move depends on uninitialised value(s)
==17463==    at 0x400B1C: print_packed (<stdin>:14)
==17463==    by 0x4019F2: test_explode_XX (<stdin>:352)
==17463==    by 0x40249F: main (<stdin>:575)
==17463== 
==17463== 
==17463== 5 errors in context 4 of 5:
==17463== Conditional jump or move depends on uninitialised value(s)
==17463==    at 0x4A084B4: strcmp (mc_replace_strmem.c:729)
==17463==    by 0x40199B: test_explode_XX (<stdin>:345)
==17463==    by 0x40249F: main (<stdin>:575)
==17463== 
==17463== 
==17463== 5 errors in context 5 of 5:
==17463== Conditional jump or move depends on uninitialised value(s)
==17463==    at 0x3F79E47E3C: vfprintf (vfprintf.c:1641)
==17463==    by 0x3F79E4F199: printf (printf.c:35)
==17463==    by 0x402B00: explode (answer03.c:105)
==17463==    by 0x401934: test_explode_XX (<stdin>:338)
==17463==    by 0x40249F: main (<stdin>:575)
==17463== 
--17463-- 
--17463-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--17463-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==17463== 
==17463== ERROR SUMMARY: 20 errors from 5 contexts (suppressed: 6 from 6)

test 10 :: explode(...)

   const char * str = "";
   const char * delims = "Tt";
   int n;
   char * * strArr = explode(std, delims, &n);
N = 0
Value of Current is 0
Value of Current-Previous + 1 is 1
Bytes Allocated = 1
 strArr[0] is 
   // strArr[0] is ""
   (pass.)
Memory errors detected, testcase failed.
==23022== Memcheck, a memory error detector
==23022== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==23022== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==23022== Command: /tmp/.EjTAb9/a.out 9
==23022== Parent PID: 23019
==23022== 
--23022-- 
--23022-- Valgrind options:
--23022--    --tool=memcheck
--23022--    --leak-check=full
--23022--    --verbose
--23022--    --log-file=memcheck.log
--23022-- Contents of /proc/version:
--23022--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--23022-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--23022-- Page sizes: currently 4096, max supported 4096
--23022-- Valgrind library directory: /usr/lib64/valgrind
--23022-- Reading syms from /tmp/.EjTAb9/a.out
--23022-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--23022--    object doesn't have a dynamic symbol table
--23022-- Reading syms from /lib64/ld-2.12.so
--23022--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--23022--   .. build-id is valid
--23022-- Scheduler: using generic scheduler lock implementation.
--23022-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==23022== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-23022-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==23022== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-23022-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==23022== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-23022-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==23022== 
==23022== TO CONTROL THIS PROCESS USING vgdb (which you probably
==23022== don't want to do, unless you know exactly what you're doing,
==23022== or are doing some strange experiment):
==23022==   /usr/lib64/valgrind/../../bin/vgdb --pid=23022 ...command...
==23022== 
==23022== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==23022==   /path/to/gdb /tmp/.EjTAb9/a.out
==23022== and then give GDB the following command
==23022==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=23022
==23022== --pid is optional if only one valgrind process is running
==23022== 
--23022-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--23022-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--23022-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--23022-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--23022-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--23022-- Reading syms from /lib64/libc-2.12.so
--23022--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--23022--   .. build-id is valid
--23022-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--23022-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--23022-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--23022-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--23022-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--23022-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--23022-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--23022-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--23022-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
--23022-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--23022-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
==23022== Conditional jump or move depends on uninitialised value(s)
==23022==    at 0x3F79E47E3C: vfprintf (vfprintf.c:1641)
==23022==    by 0x3F79E4F199: printf (printf.c:35)
==23022==    by 0x402B00: explode (answer03.c:105)
==23022==    by 0x401934: test_explode_XX (<stdin>:338)
==23022==    by 0x4024B8: main (<stdin>:576)
==23022== 
--23022-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--23022-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==23022== Conditional jump or move depends on uninitialised value(s)
==23022==    at 0x4A0849C: strcmp (mc_replace_strmem.c:729)
==23022==    by 0x40199B: test_explode_XX (<stdin>:345)
==23022==    by 0x4024B8: main (<stdin>:576)
==23022== 
==23022== Conditional jump or move depends on uninitialised value(s)
==23022==    at 0x4A084B4: strcmp (mc_replace_strmem.c:729)
==23022==    by 0x40199B: test_explode_XX (<stdin>:345)
==23022==    by 0x4024B8: main (<stdin>:576)
==23022== 
==23022== Conditional jump or move depends on uninitialised value(s)
==23022==    at 0x400B1C: print_packed (<stdin>:14)
==23022==    by 0x4019F2: test_explode_XX (<stdin>:352)
==23022==    by 0x4024B8: main (<stdin>:576)
==23022== 
==23022== 
==23022== HEAP SUMMARY:
==23022==     in use at exit: 0 bytes in 0 blocks
==23022==   total heap usage: 4 allocs, 4 frees, 18 bytes allocated
==23022== 
==23022== All heap blocks were freed -- no leaks are possible
==23022== 
==23022== Use --track-origins=yes to see where uninitialised values come from
==23022== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 6 from 6)
==23022== 
==23022== 1 errors in context 1 of 4:
==23022== Conditional jump or move depends on uninitialised value(s)
==23022==    at 0x400B1C: print_packed (<stdin>:14)
==23022==    by 0x4019F2: test_explode_XX (<stdin>:352)
==23022==    by 0x4024B8: main (<stdin>:576)
==23022== 
==23022== 
==23022== 1 errors in context 2 of 4:
==23022== Conditional jump or move depends on uninitialised value(s)
==23022==    at 0x4A084B4: strcmp (mc_replace_strmem.c:729)
==23022==    by 0x40199B: test_explode_XX (<stdin>:345)
==23022==    by 0x4024B8: main (<stdin>:576)
==23022== 
==23022== 
==23022== 1 errors in context 3 of 4:
==23022== Conditional jump or move depends on uninitialised value(s)
==23022==    at 0x4A0849C: strcmp (mc_replace_strmem.c:729)
==23022==    by 0x40199B: test_explode_XX (<stdin>:345)
==23022==    by 0x4024B8: main (<stdin>:576)
==23022== 
==23022== 
==23022== 1 errors in context 4 of 4:
==23022== Conditional jump or move depends on uninitialised value(s)
==23022==    at 0x3F79E47E3C: vfprintf (vfprintf.c:1641)
==23022==    by 0x3F79E4F199: printf (printf.c:35)
==23022==    by 0x402B00: explode (answer03.c:105)
==23022==    by 0x401934: test_explode_XX (<stdin>:338)
==23022==    by 0x4024B8: main (<stdin>:576)
==23022== 
--23022-- 
--23022-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--23022-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==23022== 
==23022== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 6 from 6)

test 11 :: explode(...)

   const char * str = "";
   const char * delims = "";
   int n;
   char * * strArr = explode(std, delims, &n);
N = 0
Value of Current is 0
Value of Current-Previous + 1 is 1
Bytes Allocated = 1
 strArr[0] is 
   // strArr[0] is ""
   (pass.)
Memory errors detected, testcase failed.
==28269== Memcheck, a memory error detector
==28269== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==28269== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==28269== Command: /tmp/.EjTAb9/a.out 10
==28269== Parent PID: 28268
==28269== 
--28269-- 
--28269-- Valgrind options:
--28269--    --tool=memcheck
--28269--    --leak-check=full
--28269--    --verbose
--28269--    --log-file=memcheck.log
--28269-- Contents of /proc/version:
--28269--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--28269-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--28269-- Page sizes: currently 4096, max supported 4096
--28269-- Valgrind library directory: /usr/lib64/valgrind
--28269-- Reading syms from /tmp/.EjTAb9/a.out
--28269-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--28269--    object doesn't have a dynamic symbol table
--28269-- Reading syms from /lib64/ld-2.12.so
--28269--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--28269--   .. build-id is valid
--28269-- Scheduler: using generic scheduler lock implementation.
--28269-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==28269== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-28269-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==28269== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-28269-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==28269== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-28269-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==28269== 
==28269== TO CONTROL THIS PROCESS USING vgdb (which you probably
==28269== don't want to do, unless you know exactly what you're doing,
==28269== or are doing some strange experiment):
==28269==   /usr/lib64/valgrind/../../bin/vgdb --pid=28269 ...command...
==28269== 
==28269== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==28269==   /path/to/gdb /tmp/.EjTAb9/a.out
==28269== and then give GDB the following command
==28269==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=28269
==28269== --pid is optional if only one valgrind process is running
==28269== 
--28269-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--28269-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--28269-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--28269-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--28269-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--28269-- Reading syms from /lib64/libc-2.12.so
--28269--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--28269--   .. build-id is valid
--28269-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28269-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28269-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--28269-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--28269-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--28269-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--28269-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--28269-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--28269-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
--28269-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28269-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
==28269== Conditional jump or move depends on uninitialised value(s)
==28269==    at 0x3F79E47E3C: vfprintf (vfprintf.c:1641)
==28269==    by 0x3F79E4F199: printf (printf.c:35)
==28269==    by 0x402B00: explode (answer03.c:105)
==28269==    by 0x401934: test_explode_XX (<stdin>:338)
==28269==    by 0x4024D1: main (<stdin>:577)
==28269== 
--28269-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--28269-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==28269== Conditional jump or move depends on uninitialised value(s)
==28269==    at 0x4A0849C: strcmp (mc_replace_strmem.c:729)
==28269==    by 0x40199B: test_explode_XX (<stdin>:345)
==28269==    by 0x4024D1: main (<stdin>:577)
==28269== 
==28269== Conditional jump or move depends on uninitialised value(s)
==28269==    at 0x4A084B4: strcmp (mc_replace_strmem.c:729)
==28269==    by 0x40199B: test_explode_XX (<stdin>:345)
==28269==    by 0x4024D1: main (<stdin>:577)
==28269== 
==28269== Conditional jump or move depends on uninitialised value(s)
==28269==    at 0x400B1C: print_packed (<stdin>:14)
==28269==    by 0x4019F2: test_explode_XX (<stdin>:352)
==28269==    by 0x4024D1: main (<stdin>:577)
==28269== 
==28269== 
==28269== HEAP SUMMARY:
==28269==     in use at exit: 0 bytes in 0 blocks
==28269==   total heap usage: 4 allocs, 4 frees, 18 bytes allocated
==28269== 
==28269== All heap blocks were freed -- no leaks are possible
==28269== 
==28269== Use --track-origins=yes to see where uninitialised values come from
==28269== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 6 from 6)
==28269== 
==28269== 1 errors in context 1 of 4:
==28269== Conditional jump or move depends on uninitialised value(s)
==28269==    at 0x400B1C: print_packed (<stdin>:14)
==28269==    by 0x4019F2: test_explode_XX (<stdin>:352)
==28269==    by 0x4024D1: main (<stdin>:577)
==28269== 
==28269== 
==28269== 1 errors in context 2 of 4:
==28269== Conditional jump or move depends on uninitialised value(s)
==28269==    at 0x4A084B4: strcmp (mc_replace_strmem.c:729)
==28269==    by 0x40199B: test_explode_XX (<stdin>:345)
==28269==    by 0x4024D1: main (<stdin>:577)
==28269== 
==28269== 
==28269== 1 errors in context 3 of 4:
==28269== Conditional jump or move depends on uninitialised value(s)
==28269==    at 0x4A0849C: strcmp (mc_replace_strmem.c:729)
==28269==    by 0x40199B: test_explode_XX (<stdin>:345)
==28269==    by 0x4024D1: main (<stdin>:577)
==28269== 
==28269== 
==28269== 1 errors in context 4 of 4:
==28269== Conditional jump or move depends on uninitialised value(s)
==28269==    at 0x3F79E47E3C: vfprintf (vfprintf.c:1641)
==28269==    by 0x3F79E4F199: printf (printf.c:35)
==28269==    by 0x402B00: explode (answer03.c:105)
==28269==    by 0x401934: test_explode_XX (<stdin>:338)
==28269==    by 0x4024D1: main (<stdin>:577)
==28269== 
--28269-- 
--28269-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--28269-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==28269== 
==28269== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 6 from 6)

test 12 :: explode(...)

   const char * str = "The more that you read, the more things you will know. The more that you learn, the more places you\'ll go.";
   const char * delims = " ,;.";
   int n;
   char * * strArr = explode(std, delims, &n);
 
 
 
 
,
 
 
 
 
 
 
.
 
 
 
 
 
,
 
 
 
 
 
.
N = 24
Value of Current is 3
Value of Current-Previous + 1 is 4
Bytes Allocated = 4
 strArr[0] is The
Value of Current is 8
Value of Current-Previous + 1 is 5
Bytes Allocated = 5
 strArr[1] is more
Value of Current is 13
Value of Current-Previous + 1 is 5
Bytes Allocated = 5
 strArr[2] is that
Value of Current is 17
Value of Current-Previous + 1 is 4
Bytes Allocated = 4
 strArr[3] is you
Value of Current is 22
Value of Current-Previous + 1 is 5
Bytes Allocated = 5
 strArr[4] is read
Value of Current is 23
Value of Current-Previous + 1 is 1
Bytes Allocated = 1
 strArr[5] is 
Value of Current is 27
Value of Current-Previous + 1 is 4
Bytes Allocated = 4
 strArr[6] is the
Value of Current is 32
Value of Current-Previous + 1 is 5
Bytes Allocated = 5
 strArr[7] is more
Value of Current is 39
Value of Current-Previous + 1 is 7
Bytes Allocated = 7
 strArr[8] is things
Value of Current is 43
Value of Current-Previous + 1 is 4
Bytes Allocated = 4
 strArr[9] is you
Value of Current is 48
Value of Current-Previous + 1 is 5
Bytes Allocated = 5
 strArr[10] is will
Value of Current is 53
Value of Current-Previous + 1 is 5
Bytes Allocated = 5
 strArr[11] is know
Value of Current is 54
Value of Current-Previous + 1 is 1
Bytes Allocated = 1
 strArr[12] is 
Value of Current is 58
Value of Current-Previous + 1 is 4
Bytes Allocated = 4
 strArr[13] is The
Value of Current is 63
Value of Current-Previous + 1 is 5
Bytes Allocated = 5
 strArr[14] is more
Value of Current is 68
Value of Current-Previous + 1 is 5
Bytes Allocated = 5
 strArr[15] is that
Value of Current is 72
Value of Current-Previous + 1 is 4
Bytes Allocated = 4
 strArr[16] is you
Value of Current is 78
Value of Current-Previous + 1 is 6
Bytes Allocated = 6
 strArr[17] is learn
Value of Current is 79
Value of Current-Previous + 1 is 1
Bytes Allocated = 1
 strArr[18] is 
Value of Current is 83
Value of Current-Previous + 1 is 4
Bytes Allocated = 4
 strArr[19] is the
Value of Current is 88
Value of Current-Previous + 1 is 5
Bytes Allocated = 5
 strArr[20] is more
Value of Current is 95
Value of Current-Previous + 1 is 7
Bytes Allocated = 7
 strArr[21] is places
Value of Current is 102
Value of Current-Previous + 1 is 7
Bytes Allocated = 7
 strArr[22] is you'll
Value of Current is 105
Value of Current-Previous + 1 is 3
Bytes Allocated = 3
 strArr[23] is go
Value of Current is 106
Value of Current-Previous + 1 is 1
Bytes Allocated = 1
 strArr[24] is 
   // strArr[0] is "The"
   // strArr[1] is "more"
   // strArr[2] is "that"
   // strArr[3] is "you"
   // strArr[4] is "read"
   // strArr[5] is ""
   // strArr[6] is "the"
   // strArr[7] is "more"
   // strArr[8] is "things"
   // strArr[9] is "you"
   // strArr[10] is "will"
   // strArr[11] is "know"
   // strArr[12] is ""
   // strArr[13] is "The"
   // strArr[14] is "more"
   // strArr[15] is "that"
   // strArr[16] is "you"
   // strArr[17] is "learn"
   // strArr[18] is ""
   // strArr[19] is "the"
   // strArr[20] is "more"
   // strArr[21] is "places"
   // strArr[22] is "you\'ll"
   // strArr[23] is "go"
   // strArr[24] is ""
   (pass.)
Memory errors detected, testcase failed.
==1275== Memcheck, a memory error detector
==1275== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==1275== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==1275== Command: /tmp/.EjTAb9/a.out 11
==1275== Parent PID: 1273
==1275== 
--1275-- 
--1275-- Valgrind options:
--1275--    --tool=memcheck
--1275--    --leak-check=full
--1275--    --verbose
--1275--    --log-file=memcheck.log
--1275-- Contents of /proc/version:
--1275--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--1275-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--1275-- Page sizes: currently 4096, max supported 4096
--1275-- Valgrind library directory: /usr/lib64/valgrind
--1275-- Reading syms from /tmp/.EjTAb9/a.out
--1275-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--1275--    object doesn't have a dynamic symbol table
--1275-- Reading syms from /lib64/ld-2.12.so
--1275--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--1275--   .. build-id is valid
--1275-- Scheduler: using generic scheduler lock implementation.
--1275-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==1275== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-1275-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==1275== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-1275-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==1275== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-1275-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==1275== 
==1275== TO CONTROL THIS PROCESS USING vgdb (which you probably
==1275== don't want to do, unless you know exactly what you're doing,
==1275== or are doing some strange experiment):
==1275==   /usr/lib64/valgrind/../../bin/vgdb --pid=1275 ...command...
==1275== 
==1275== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==1275==   /path/to/gdb /tmp/.EjTAb9/a.out
==1275== and then give GDB the following command
==1275==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=1275
==1275== --pid is optional if only one valgrind process is running
==1275== 
--1275-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--1275-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--1275-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--1275-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--1275-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--1275-- Reading syms from /lib64/libc-2.12.so
--1275--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--1275--   .. build-id is valid
--1275-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--1275-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--1275-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--1275-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--1275-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--1275-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--1275-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--1275-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--1275-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--1275-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--1275-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
==1275== Conditional jump or move depends on uninitialised value(s)
==1275==    at 0x3F79E47E3C: vfprintf (vfprintf.c:1641)
==1275==    by 0x3F79E4F199: printf (printf.c:35)
==1275==    by 0x402B00: explode (answer03.c:105)
==1275==    by 0x401934: test_explode_XX (<stdin>:338)
==1275==    by 0x4024EF: main (<stdin>:578)
==1275== 
--1275-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--1275-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==1275== Conditional jump or move depends on uninitialised value(s)
==1275==    at 0x4A084B0: strcmp (mc_replace_strmem.c:729)
==1275==    by 0x40199B: test_explode_XX (<stdin>:345)
==1275==    by 0x4024EF: main (<stdin>:578)
==1275== 
==1275== Conditional jump or move depends on uninitialised value(s)
==1275==    at 0x4A084B4: strcmp (mc_replace_strmem.c:729)
==1275==    by 0x40199B: test_explode_XX (<stdin>:345)
==1275==    by 0x4024EF: main (<stdin>:578)
==1275== 
==1275== Conditional jump or move depends on uninitialised value(s)
==1275==    at 0x4A0849C: strcmp (mc_replace_strmem.c:729)
==1275==    by 0x40199B: test_explode_XX (<stdin>:345)
==1275==    by 0x4024EF: main (<stdin>:578)
==1275== 
==1275== Conditional jump or move depends on uninitialised value(s)
==1275==    at 0x400B1C: print_packed (<stdin>:14)
==1275==    by 0x4019F2: test_explode_XX (<stdin>:352)
==1275==    by 0x4024EF: main (<stdin>:578)
==1275== 
==1275== 
==1275== HEAP SUMMARY:
==1275==     in use at exit: 0 bytes in 0 blocks
==1275==   total heap usage: 52 allocs, 52 frees, 614 bytes allocated
==1275== 
==1275== All heap blocks were freed -- no leaks are possible
==1275== 
==1275== Use --track-origins=yes to see where uninitialised values come from
==1275== ERROR SUMMARY: 100 errors from 5 contexts (suppressed: 6 from 6)
==1275== 
==1275== 4 errors in context 1 of 5:
==1275== Conditional jump or move depends on uninitialised value(s)
==1275==    at 0x4A0849C: strcmp (mc_replace_strmem.c:729)
==1275==    by 0x40199B: test_explode_XX (<stdin>:345)
==1275==    by 0x4024EF: main (<stdin>:578)
==1275== 
==1275== 
==1275== 21 errors in context 2 of 5:
==1275== Conditional jump or move depends on uninitialised value(s)
==1275==    at 0x4A084B0: strcmp (mc_replace_strmem.c:729)
==1275==    by 0x40199B: test_explode_XX (<stdin>:345)
==1275==    by 0x4024EF: main (<stdin>:578)
==1275== 
==1275== 
==1275== 25 errors in context 3 of 5:
==1275== Conditional jump or move depends on uninitialised value(s)
==1275==    at 0x400B1C: print_packed (<stdin>:14)
==1275==    by 0x4019F2: test_explode_XX (<stdin>:352)
==1275==    by 0x4024EF: main (<stdin>:578)
==1275== 
==1275== 
==1275== 25 errors in context 4 of 5:
==1275== Conditional jump or move depends on uninitialised value(s)
==1275==    at 0x4A084B4: strcmp (mc_replace_strmem.c:729)
==1275==    by 0x40199B: test_explode_XX (<stdin>:345)
==1275==    by 0x4024EF: main (<stdin>:578)
==1275== 
==1275== 
==1275== 25 errors in context 5 of 5:
==1275== Conditional jump or move depends on uninitialised value(s)
==1275==    at 0x3F79E47E3C: vfprintf (vfprintf.c:1641)
==1275==    by 0x3F79E4F199: printf (printf.c:35)
==1275==    by 0x402B00: explode (answer03.c:105)
==1275==    by 0x401934: test_explode_XX (<stdin>:338)
==1275==    by 0x4024EF: main (<stdin>:578)
==1275== 
--1275-- 
--1275-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--1275-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==1275== 
==1275== ERROR SUMMARY: 100 errors from 5 contexts (suppressed: 6 from 6)

test 13 :: explode(...)

   const char * str = "Twas brillig, and the slithy toves\nDid gyre and gimble in the wabe:\nAll mimsy were the borogoves,\nAnd the mome raths outgrabe.\n\nBeware the Jabberwock, my son!\nThe jaws that bite, the claws that catch!\nBeware the Jubjub bird, and shun\nThe frumious Bandersnatch!\n\nHe took his vorpal sword in hand:\nLong time the manxome foe he sought --\nSo rested he by the Tumtum tree,\nAnd stood awhile in thought.\n\nAnd, as in uffish thought he stood,\nThe Jabberwock, with eyes of flame,\nCame whiffling through the tulgey wood,\nAnd burbled as it came!\n\nOne, two! One, two! And through and through\nThe vorpal blade went snicker-snack!\nHe left it dead, and with its head\nHe went galumphing back.\n\nAnd, has thou slain the Jabberwock?\nCome to my arms, my beamish boy!\nO frabjous day! Callooh! Callay!\nHe chortled in his joy.\n\nTwas brillig, and the slithy toves\nDid gyre and gimble in the wabe;\nAll mimsy were the borogoves,\nAnd the mome raths outgrabe.\n";
   const char * delims = "\n";
   int n;
   char * * strArr = explode(std, delims, &n);




































































N = 34
Value of Current is 34
Value of Current-Previous + 1 is 35
Bytes Allocated = 35
 strArr[0] is Twas brillig, and the slithy toves
Value of Current is 67
Value of Current-Previous + 1 is 33
Bytes Allocated = 33
 strArr[1] is Did gyre and gimble in the wabe:
Value of Current is 97
Value of Current-Previous + 1 is 30
Bytes Allocated = 30
 strArr[2] is All mimsy were the borogoves,
Value of Current is 126
Value of Current-Previous + 1 is 29
Bytes Allocated = 29
 strArr[3] is And the mome raths outgrabe.
Value of Current is 127
Value of Current-Previous + 1 is 1
Bytes Allocated = 1
 strArr[4] is 
Value of Current is 158
Value of Current-Previous + 1 is 31
Bytes Allocated = 31
 strArr[5] is Beware the Jabberwock, my son!
Value of Current is 200
Value of Current-Previous + 1 is 42
Bytes Allocated = 42
 strArr[6] is The jaws that bite, the claws that catch!
Value of Current is 233
Value of Current-Previous + 1 is 33
Bytes Allocated = 33
 strArr[7] is Beware the Jubjub bird, and shun
Value of Current is 260
Value of Current-Previous + 1 is 27
Bytes Allocated = 27
 strArr[8] is The frumious Bandersnatch!
Value of Current is 261
Value of Current-Previous + 1 is 1
Bytes Allocated = 1
 strArr[9] is 
Value of Current is 295
Value of Current-Previous + 1 is 34
Bytes Allocated = 34
 strArr[10] is He took his vorpal sword in hand:
Value of Current is 334
Value of Current-Previous + 1 is 39
Bytes Allocated = 39
 strArr[11] is Long time the manxome foe he sought --
Value of Current is 367
Value of Current-Previous + 1 is 33
Bytes Allocated = 33
 strArr[12] is So rested he by the Tumtum tree,
Value of Current is 396
Value of Current-Previous + 1 is 29
Bytes Allocated = 29
 strArr[13] is And stood awhile in thought.
Value of Current is 397
Value of Current-Previous + 1 is 1
Bytes Allocated = 1
 strArr[14] is 
Value of Current is 433
Value of Current-Previous + 1 is 36
Bytes Allocated = 36
 strArr[15] is And, as in uffish thought he stood,
Value of Current is 469
Value of Current-Previous + 1 is 36
Bytes Allocated = 36
 strArr[16] is The Jabberwock, with eyes of flame,
Value of Current is 509
Value of Current-Previous + 1 is 40
Bytes Allocated = 40
 strArr[17] is Came whiffling through the tulgey wood,
Value of Current is 533
Value of Current-Previous + 1 is 24
Bytes Allocated = 24
 strArr[18] is And burbled as it came!
Value of Current is 534
Value of Current-Previous + 1 is 1
Bytes Allocated = 1
 strArr[19] is 
Value of Current is 578
Value of Current-Previous + 1 is 44
Bytes Allocated = 44
 strArr[20] is One, two! One, two! And through and through
Value of Current is 615
Value of Current-Previous + 1 is 37
Bytes Allocated = 37
 strArr[21] is The vorpal blade went snicker-snack!
Value of Current is 650
Value of Current-Previous + 1 is 35
Bytes Allocated = 35
 strArr[22] is He left it dead, and with its head
Value of Current is 675
Value of Current-Previous + 1 is 25
Bytes Allocated = 25
 strArr[23] is He went galumphing back.
Value of Current is 676
Value of Current-Previous + 1 is 1
Bytes Allocated = 1
 strArr[24] is 
Value of Current is 712
Value of Current-Previous + 1 is 36
Bytes Allocated = 36
 strArr[25] is And, has thou slain the Jabberwock?
Value of Current is 745
Value of Current-Previous + 1 is 33
Bytes Allocated = 33
 strArr[26] is Come to my arms, my beamish boy!
Value of Current is 778
Value of Current-Previous + 1 is 33
Bytes Allocated = 33
 strArr[27] is O frabjous day! Callooh! Callay!
Value of Current is 802
Value of Current-Previous + 1 is 24
Bytes Allocated = 24
 strArr[28] is He chortled in his joy.
Value of Current is 803
Value of Current-Previous + 1 is 1
Bytes Allocated = 1
 strArr[29] is 
Value of Current is 838
Value of Current-Previous + 1 is 35
Bytes Allocated = 35
 strArr[30] is Twas brillig, and the slithy toves
Value of Current is 871
Value of Current-Previous + 1 is 33
Bytes Allocated = 33
 strArr[31] is Did gyre and gimble in the wabe;
Value of Current is 901
Value of Current-Previous + 1 is 30
Bytes Allocated = 30
 strArr[32] is All mimsy were the borogoves,
Value of Current is 930
Value of Current-Previous + 1 is 29
Bytes Allocated = 29
 strArr[33] is And the mome raths outgrabe.
Value of Current is 931
Value of Current-Previous + 1 is 1
Bytes Allocated = 1
 strArr[34] is 
   // strArr[0] is "Twas brillig, and the slithy toves"
   // strArr[1] is "Did gyre and gimble in the wabe:"
   // strArr[2] is "All mimsy were the borogoves,"
   // strArr[3] is "And the mome raths outgrabe."
   // strArr[4] is ""
   // strArr[5] is "Beware the Jabberwock, my son!"
   // strArr[6] is "The jaws that bite, the claws that catch!"
   // strArr[7] is "Beware the Jubjub bird, and shun"
   // strArr[8] is "The frumious Bandersnatch!"
   // strArr[9] is ""
   // strArr[10] is "He took his vorpal sword in hand:"
   // strArr[11] is "Long time the manxome foe he sought --"
   // strArr[12] is "So rested he by the Tumtum tree,"
   // strArr[13] is "And stood awhile in thought."
   // strArr[14] is ""
   // strArr[15] is "And, as in uffish thought he stood,"
   // strArr[16] is "The Jabberwock, with eyes of flame,"
   // strArr[17] is "Came whiffling through the tulgey wood,"
   // strArr[18] is "And burbled as it came!"
   // strArr[19] is ""
   // strArr[20] is "One, two! One, two! And through and through"
   // strArr[21] is "The vorpal blade went snicker-snack!"
   // strArr[22] is "He left it dead, and with its head"
   // strArr[23] is "He went galumphing back."
   // strArr[24] is ""
   // strArr[25] is "And, has thou slain the Jabberwock?"
   // strArr[26] is "Come to my arms, my beamish boy!"
   // strArr[27] is "O frabjous day! Callooh! Callay!"
   // strArr[28] is "He chortled in his joy."
   // strArr[29] is ""
   // strArr[30] is "Twas brillig, and the slithy toves"
   // strArr[31] is "Did gyre and gimble in the wabe;"
   // strArr[32] is "All mimsy were the borogoves,"
   // strArr[33] is "And the mome raths outgrabe."
   // strArr[34] is ""
   (pass.)
Memory errors detected, testcase failed.
==7050== Memcheck, a memory error detector
==7050== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==7050== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==7050== Command: /tmp/.EjTAb9/a.out 12
==7050== Parent PID: 7049
==7050== 
--7050-- 
--7050-- Valgrind options:
--7050--    --tool=memcheck
--7050--    --leak-check=full
--7050--    --verbose
--7050--    --log-file=memcheck.log
--7050-- Contents of /proc/version:
--7050--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--7050-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--7050-- Page sizes: currently 4096, max supported 4096
--7050-- Valgrind library directory: /usr/lib64/valgrind
--7050-- Reading syms from /tmp/.EjTAb9/a.out
--7050-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--7050--    object doesn't have a dynamic symbol table
--7050-- Reading syms from /lib64/ld-2.12.so
--7050--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--7050--   .. build-id is valid
--7050-- Scheduler: using generic scheduler lock implementation.
--7050-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==7050== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-7050-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==7050== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-7050-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==7050== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-7050-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==7050== 
==7050== TO CONTROL THIS PROCESS USING vgdb (which you probably
==7050== don't want to do, unless you know exactly what you're doing,
==7050== or are doing some strange experiment):
==7050==   /usr/lib64/valgrind/../../bin/vgdb --pid=7050 ...command...
==7050== 
==7050== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==7050==   /path/to/gdb /tmp/.EjTAb9/a.out
==7050== and then give GDB the following command
==7050==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=7050
==7050== --pid is optional if only one valgrind process is running
==7050== 
--7050-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--7050-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--7050-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--7050-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--7050-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--7050-- Reading syms from /lib64/libc-2.12.so
--7050--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--7050--   .. build-id is valid
--7050-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--7050-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--7050-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--7050-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--7050-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--7050-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--7050-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--7050-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--7050-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--7050-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--7050-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
==7050== Conditional jump or move depends on uninitialised value(s)
==7050==    at 0x3F79E47E3C: vfprintf (vfprintf.c:1641)
==7050==    by 0x3F79E4F199: printf (printf.c:35)
==7050==    by 0x402B00: explode (answer03.c:105)
==7050==    by 0x401934: test_explode_XX (<stdin>:338)
==7050==    by 0x40250D: main (<stdin>:579)
==7050== 
--7050-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--7050-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==7050== Conditional jump or move depends on uninitialised value(s)
==7050==    at 0x4A084B0: strcmp (mc_replace_strmem.c:729)
==7050==    by 0x40199B: test_explode_XX (<stdin>:345)
==7050==    by 0x40250D: main (<stdin>:579)
==7050== 
==7050== Conditional jump or move depends on uninitialised value(s)
==7050==    at 0x4A084B4: strcmp (mc_replace_strmem.c:729)
==7050==    by 0x40199B: test_explode_XX (<stdin>:345)
==7050==    by 0x40250D: main (<stdin>:579)
==7050== 
==7050== Conditional jump or move depends on uninitialised value(s)
==7050==    at 0x4A0849C: strcmp (mc_replace_strmem.c:729)
==7050==    by 0x40199B: test_explode_XX (<stdin>:345)
==7050==    by 0x40250D: main (<stdin>:579)
==7050== 
==7050== Conditional jump or move depends on uninitialised value(s)
==7050==    at 0x400B1C: print_packed (<stdin>:14)
==7050==    by 0x4019F2: test_explode_XX (<stdin>:352)
==7050==    by 0x40250D: main (<stdin>:579)
==7050== 
==7050== 
==7050== HEAP SUMMARY:
==7050==     in use at exit: 0 bytes in 0 blocks
==7050==   total heap usage: 72 allocs, 72 frees, 2,424 bytes allocated
==7050== 
==7050== All heap blocks were freed -- no leaks are possible
==7050== 
==7050== Use --track-origins=yes to see where uninitialised values come from
==7050== ERROR SUMMARY: 140 errors from 5 contexts (suppressed: 6 from 6)
==7050== 
==7050== 7 errors in context 1 of 5:
==7050== Conditional jump or move depends on uninitialised value(s)
==7050==    at 0x4A0849C: strcmp (mc_replace_strmem.c:729)
==7050==    by 0x40199B: test_explode_XX (<stdin>:345)
==7050==    by 0x40250D: main (<stdin>:579)
==7050== 
==7050== 
==7050== 28 errors in context 2 of 5:
==7050== Conditional jump or move depends on uninitialised value(s)
==7050==    at 0x4A084B0: strcmp (mc_replace_strmem.c:729)
==7050==    by 0x40199B: test_explode_XX (<stdin>:345)
==7050==    by 0x40250D: main (<stdin>:579)
==7050== 
==7050== 
==7050== 35 errors in context 3 of 5:
==7050== Conditional jump or move depends on uninitialised value(s)
==7050==    at 0x400B1C: print_packed (<stdin>:14)
==7050==    by 0x4019F2: test_explode_XX (<stdin>:352)
==7050==    by 0x40250D: main (<stdin>:579)
==7050== 
==7050== 
==7050== 35 errors in context 4 of 5:
==7050== Conditional jump or move depends on uninitialised value(s)
==7050==    at 0x4A084B4: strcmp (mc_replace_strmem.c:729)
==7050==    by 0x40199B: test_explode_XX (<stdin>:345)
==7050==    by 0x40250D: main (<stdin>:579)
==7050== 
==7050== 
==7050== 35 errors in context 5 of 5:
==7050== Conditional jump or move depends on uninitialised value(s)
==7050==    at 0x3F79E47E3C: vfprintf (vfprintf.c:1641)
==7050==    by 0x3F79E4F199: printf (printf.c:35)
==7050==    by 0x402B00: explode (answer03.c:105)
==7050==    by 0x401934: test_explode_XX (<stdin>:338)
==7050==    by 0x40250D: main (<stdin>:579)
==7050== 
--7050-- 
--7050-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--7050-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==7050== 
==7050== ERROR SUMMARY: 140 errors from 5 contexts (suppressed: 6 from 6)

test 14 :: explode(...)

   const char * str = "aaaaa";
   const char * delims = "a";
   int n;
   char * * strArr = explode(std, delims, &n);
a
a
a
a
a
N = 5
Value of Current is 0
Value of Current-Previous + 1 is 1
Bytes Allocated = 1
 strArr[0] is 
Value of Current is 1
Value of Current-Previous + 1 is 1
Bytes Allocated = 1
 strArr[1] is 
Value of Current is 2
Value of Current-Previous + 1 is 1
Bytes Allocated = 1
 strArr[2] is 
Value of Current is 3
Value of Current-Previous + 1 is 1
Bytes Allocated = 1
 strArr[3] is 
Value of Current is 4
Value of Current-Previous + 1 is 1
Bytes Allocated = 1
 strArr[4] is 
Value of Current is 5
Value of Current-Previous + 1 is 1
Bytes Allocated = 1
 strArr[5] is 
   // strArr[0] is ""
   // strArr[1] is ""
   // strArr[2] is ""
   // strArr[3] is ""
   // strArr[4] is ""
   // strArr[5] is ""
   (pass.)
Memory errors detected, testcase failed.
==12491== Memcheck, a memory error detector
==12491== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==12491== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==12491== Command: /tmp/.EjTAb9/a.out 13
==12491== Parent PID: 12490
==12491== 
--12491-- 
--12491-- Valgrind options:
--12491--    --tool=memcheck
--12491--    --leak-check=full
--12491--    --verbose
--12491--    --log-file=memcheck.log
--12491-- Contents of /proc/version:
--12491--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--12491-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--12491-- Page sizes: currently 4096, max supported 4096
--12491-- Valgrind library directory: /usr/lib64/valgrind
--12491-- Reading syms from /tmp/.EjTAb9/a.out
--12491-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--12491--    object doesn't have a dynamic symbol table
--12491-- Reading syms from /lib64/ld-2.12.so
--12491--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--12491--   .. build-id is valid
--12491-- Scheduler: using generic scheduler lock implementation.
--12491-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==12491== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-12491-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==12491== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-12491-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==12491== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-12491-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==12491== 
==12491== TO CONTROL THIS PROCESS USING vgdb (which you probably
==12491== don't want to do, unless you know exactly what you're doing,
==12491== or are doing some strange experiment):
==12491==   /usr/lib64/valgrind/../../bin/vgdb --pid=12491 ...command...
==12491== 
==12491== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==12491==   /path/to/gdb /tmp/.EjTAb9/a.out
==12491== and then give GDB the following command
==12491==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=12491
==12491== --pid is optional if only one valgrind process is running
==12491== 
--12491-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--12491-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--12491-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--12491-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--12491-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--12491-- Reading syms from /lib64/libc-2.12.so
--12491--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--12491--   .. build-id is valid
--12491-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--12491-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--12491-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--12491-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--12491-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--12491-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--12491-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--12491-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--12491-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--12491-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--12491-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
==12491== Conditional jump or move depends on uninitialised value(s)
==12491==    at 0x3F79E47E3C: vfprintf (vfprintf.c:1641)
==12491==    by 0x3F79E4F199: printf (printf.c:35)
==12491==    by 0x402B00: explode (answer03.c:105)
==12491==    by 0x401934: test_explode_XX (<stdin>:338)
==12491==    by 0x402526: main (<stdin>:580)
==12491== 
--12491-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--12491-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==12491== Conditional jump or move depends on uninitialised value(s)
==12491==    at 0x4A0849C: strcmp (mc_replace_strmem.c:729)
==12491==    by 0x40199B: test_explode_XX (<stdin>:345)
==12491==    by 0x402526: main (<stdin>:580)
==12491== 
==12491== Conditional jump or move depends on uninitialised value(s)
==12491==    at 0x4A084B4: strcmp (mc_replace_strmem.c:729)
==12491==    by 0x40199B: test_explode_XX (<stdin>:345)
==12491==    by 0x402526: main (<stdin>:580)
==12491== 
==12491== Conditional jump or move depends on uninitialised value(s)
==12491==    at 0x400B1C: print_packed (<stdin>:14)
==12491==    by 0x4019F2: test_explode_XX (<stdin>:352)
==12491==    by 0x402526: main (<stdin>:580)
==12491== 
==12491== 
==12491== HEAP SUMMARY:
==12491==     in use at exit: 0 bytes in 0 blocks
==12491==   total heap usage: 14 allocs, 14 frees, 108 bytes allocated
==12491== 
==12491== All heap blocks were freed -- no leaks are possible
==12491== 
==12491== Use --track-origins=yes to see where uninitialised values come from
==12491== ERROR SUMMARY: 24 errors from 4 contexts (suppressed: 6 from 6)
==12491== 
==12491== 6 errors in context 1 of 4:
==12491== Conditional jump or move depends on uninitialised value(s)
==12491==    at 0x400B1C: print_packed (<stdin>:14)
==12491==    by 0x4019F2: test_explode_XX (<stdin>:352)
==12491==    by 0x402526: main (<stdin>:580)
==12491== 
==12491== 
==12491== 6 errors in context 2 of 4:
==12491== Conditional jump or move depends on uninitialised value(s)
==12491==    at 0x4A084B4: strcmp (mc_replace_strmem.c:729)
==12491==    by 0x40199B: test_explode_XX (<stdin>:345)
==12491==    by 0x402526: main (<stdin>:580)
==12491== 
==12491== 
==12491== 6 errors in context 3 of 4:
==12491== Conditional jump or move depends on uninitialised value(s)
==12491==    at 0x4A0849C: strcmp (mc_replace_strmem.c:729)
==12491==    by 0x40199B: test_explode_XX (<stdin>:345)
==12491==    by 0x402526: main (<stdin>:580)
==12491== 
==12491== 
==12491== 6 errors in context 4 of 4:
==12491== Conditional jump or move depends on uninitialised value(s)
==12491==    at 0x3F79E47E3C: vfprintf (vfprintf.c:1641)
==12491==    by 0x3F79E4F199: printf (printf.c:35)
==12491==    by 0x402B00: explode (answer03.c:105)
==12491==    by 0x401934: test_explode_XX (<stdin>:338)
==12491==    by 0x402526: main (<stdin>:580)
==12491== 
--12491-- 
--12491-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--12491-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==12491== 
==12491== ERROR SUMMARY: 24 errors from 4 contexts (suppressed: 6 from 6)

test 15 :: implode(...)

   int len = 3
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("The");
   strArr[1] = strdup("Turing");
   strArr[2] = strdup("test");
   const char * glue = " ";
   char * s = implode(strArr, len, glue);
   // s is "The"
   FAIL
   // expected: "The Turing test"
Memory errors detected, testcase failed.
==16394== Memcheck, a memory error detector
==16394== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==16394== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==16394== Command: /tmp/.EjTAb9/a.out 14
==16394== Parent PID: 16393
==16394== 
--16394-- 
--16394-- Valgrind options:
--16394--    --tool=memcheck
--16394--    --leak-check=full
--16394--    --verbose
--16394--    --log-file=memcheck.log
--16394-- Contents of /proc/version:
--16394--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--16394-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--16394-- Page sizes: currently 4096, max supported 4096
--16394-- Valgrind library directory: /usr/lib64/valgrind
--16394-- Reading syms from /tmp/.EjTAb9/a.out
--16394-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--16394--    object doesn't have a dynamic symbol table
--16394-- Reading syms from /lib64/ld-2.12.so
--16394--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--16394--   .. build-id is valid
--16394-- Scheduler: using generic scheduler lock implementation.
--16394-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==16394== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-16394-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==16394== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-16394-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==16394== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-16394-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==16394== 
==16394== TO CONTROL THIS PROCESS USING vgdb (which you probably
==16394== don't want to do, unless you know exactly what you're doing,
==16394== or are doing some strange experiment):
==16394==   /usr/lib64/valgrind/../../bin/vgdb --pid=16394 ...command...
==16394== 
==16394== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==16394==   /path/to/gdb /tmp/.EjTAb9/a.out
==16394== and then give GDB the following command
==16394==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=16394
==16394== --pid is optional if only one valgrind process is running
==16394== 
--16394-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--16394-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--16394-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--16394-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--16394-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--16394-- Reading syms from /lib64/libc-2.12.so
--16394--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--16394--   .. build-id is valid
--16394-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16394-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16394-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--16394-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16394-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--16394-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--16394-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
--16394-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--16394-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--16394-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--16394-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--16394-- REDIR: 0x3f79e81120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16394-- REDIR: 0x3f79f33560 (__strlen_sse42) redirected to 0x4a07f50 (strlen)
--16394-- REDIR: 0x3f79e7f470 (strcat) redirected to 0x4a07c20 (strcat)
--16394-- REDIR: 0x3f79e80b70 (strcpy) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16394-- REDIR: 0x3f79f34000 (???) redirected to 0x4a07f90 (strcpy)
--16394-- REDIR: 0x3f79e833d0 (bcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16394-- REDIR: 0x3f79f3e610 (__memcmp_sse4_1) redirected to 0x4a09630 (bcmp)
--16394-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16394-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==16394== Invalid free() / delete / delete[] / realloc()
==16394==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==16394==    by 0x401E67: test_implode_XX (<stdin>:437)
==16394==    by 0x402544: main (<stdin>:581)
==16394==  Address 0x4c3c0a0 is 0 bytes inside a block of size 4 free'd
==16394==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==16394==    by 0x400F6A: destroyStringArray_sol (<stdin>:138)
==16394==    by 0x401E5B: test_implode_XX (<stdin>:436)
==16394==    by 0x402544: main (<stdin>:581)
==16394== 
==16394== 
==16394== HEAP SUMMARY:
==16394==     in use at exit: 0 bytes in 0 blocks
==16394==   total heap usage: 7 allocs, 8 frees, 92 bytes allocated
==16394== 
==16394== All heap blocks were freed -- no leaks are possible
==16394== 
==16394== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
==16394== 
==16394== 1 errors in context 1 of 1:
==16394== Invalid free() / delete / delete[] / realloc()
==16394==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==16394==    by 0x401E67: test_implode_XX (<stdin>:437)
==16394==    by 0x402544: main (<stdin>:581)
==16394==  Address 0x4c3c0a0 is 0 bytes inside a block of size 4 free'd
==16394==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==16394==    by 0x400F6A: destroyStringArray_sol (<stdin>:138)
==16394==    by 0x401E5B: test_implode_XX (<stdin>:436)
==16394==    by 0x402544: main (<stdin>:581)
==16394== 
--16394-- 
--16394-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--16394-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==16394== 
==16394== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)

test 16 :: implode(...)

   int len = 2
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("The");
   strArr[1] = strdup("Turing test");
   const char * glue = "{newline}";
   char * s = implode(strArr, len, glue);
   // s is "The"
   FAIL
   // expected: "The{newline}Turing test"
Memory errors detected, testcase failed.
==19369== Memcheck, a memory error detector
==19369== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==19369== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==19369== Command: /tmp/.EjTAb9/a.out 15
==19369== Parent PID: 19368
==19369== 
--19369-- 
--19369-- Valgrind options:
--19369--    --tool=memcheck
--19369--    --leak-check=full
--19369--    --verbose
--19369--    --log-file=memcheck.log
--19369-- Contents of /proc/version:
--19369--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--19369-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--19369-- Page sizes: currently 4096, max supported 4096
--19369-- Valgrind library directory: /usr/lib64/valgrind
--19369-- Reading syms from /tmp/.EjTAb9/a.out
--19369-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--19369--    object doesn't have a dynamic symbol table
--19369-- Reading syms from /lib64/ld-2.12.so
--19369--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--19369--   .. build-id is valid
--19369-- Scheduler: using generic scheduler lock implementation.
--19369-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==19369== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-19369-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==19369== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-19369-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==19369== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-19369-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==19369== 
==19369== TO CONTROL THIS PROCESS USING vgdb (which you probably
==19369== don't want to do, unless you know exactly what you're doing,
==19369== or are doing some strange experiment):
==19369==   /usr/lib64/valgrind/../../bin/vgdb --pid=19369 ...command...
==19369== 
==19369== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==19369==   /path/to/gdb /tmp/.EjTAb9/a.out
==19369== and then give GDB the following command
==19369==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=19369
==19369== --pid is optional if only one valgrind process is running
==19369== 
--19369-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--19369-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--19369-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--19369-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--19369-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--19369-- Reading syms from /lib64/libc-2.12.so
--19369--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--19369--   .. build-id is valid
--19369-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--19369-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--19369-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--19369-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--19369-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--19369-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--19369-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
--19369-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--19369-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--19369-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--19369-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--19369-- REDIR: 0x3f79e81120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--19369-- REDIR: 0x3f79f33560 (__strlen_sse42) redirected to 0x4a07f50 (strlen)
--19369-- REDIR: 0x3f79e7f470 (strcat) redirected to 0x4a07c20 (strcat)
--19369-- REDIR: 0x3f79e80b70 (strcpy) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--19369-- REDIR: 0x3f79f34000 (???) redirected to 0x4a07f90 (strcpy)
--19369-- REDIR: 0x3f79e833d0 (bcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--19369-- REDIR: 0x3f79f3e610 (__memcmp_sse4_1) redirected to 0x4a09630 (bcmp)
--19369-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--19369-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==19369== Invalid free() / delete / delete[] / realloc()
==19369==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==19369==    by 0x401E67: test_implode_XX (<stdin>:437)
==19369==    by 0x402562: main (<stdin>:582)
==19369==  Address 0x4c3c090 is 0 bytes inside a block of size 4 free'd
==19369==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==19369==    by 0x400F6A: destroyStringArray_sol (<stdin>:138)
==19369==    by 0x401E5B: test_implode_XX (<stdin>:436)
==19369==    by 0x402562: main (<stdin>:582)
==19369== 
==19369== 
==19369== HEAP SUMMARY:
==19369==     in use at exit: 0 bytes in 0 blocks
==19369==   total heap usage: 6 allocs, 7 frees, 80 bytes allocated
==19369== 
==19369== All heap blocks were freed -- no leaks are possible
==19369== 
==19369== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
==19369== 
==19369== 1 errors in context 1 of 1:
==19369== Invalid free() / delete / delete[] / realloc()
==19369==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==19369==    by 0x401E67: test_implode_XX (<stdin>:437)
==19369==    by 0x402562: main (<stdin>:582)
==19369==  Address 0x4c3c090 is 0 bytes inside a block of size 4 free'd
==19369==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==19369==    by 0x400F6A: destroyStringArray_sol (<stdin>:138)
==19369==    by 0x401E5B: test_implode_XX (<stdin>:436)
==19369==    by 0x402562: main (<stdin>:582)
==19369== 
--19369-- 
--19369-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--19369-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==19369== 
==19369== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)

test 17 :: implode(...)

   int len = 5
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("");
   strArr[1] = strdup("he\n");
   strArr[2] = strdup("uring ");
   strArr[3] = strdup("es");
   strArr[4] = strdup("");
   const char * glue = "";
   char * s = implode(strArr, len, glue);
   // s is ""
   FAIL
   // expected: "he\nuring es"
Memory errors detected, testcase failed.
==24627== Memcheck, a memory error detector
==24627== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==24627== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==24627== Command: /tmp/.EjTAb9/a.out 16
==24627== Parent PID: 24626
==24627== 
--24627-- 
--24627-- Valgrind options:
--24627--    --tool=memcheck
--24627--    --leak-check=full
--24627--    --verbose
--24627--    --log-file=memcheck.log
--24627-- Contents of /proc/version:
--24627--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--24627-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--24627-- Page sizes: currently 4096, max supported 4096
--24627-- Valgrind library directory: /usr/lib64/valgrind
--24627-- Reading syms from /tmp/.EjTAb9/a.out
--24627-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--24627--    object doesn't have a dynamic symbol table
--24627-- Reading syms from /lib64/ld-2.12.so
--24627--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--24627--   .. build-id is valid
--24627-- Scheduler: using generic scheduler lock implementation.
--24627-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==24627== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-24627-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==24627== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-24627-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==24627== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-24627-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==24627== 
==24627== TO CONTROL THIS PROCESS USING vgdb (which you probably
==24627== don't want to do, unless you know exactly what you're doing,
==24627== or are doing some strange experiment):
==24627==   /usr/lib64/valgrind/../../bin/vgdb --pid=24627 ...command...
==24627== 
==24627== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==24627==   /path/to/gdb /tmp/.EjTAb9/a.out
==24627== and then give GDB the following command
==24627==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=24627
==24627== --pid is optional if only one valgrind process is running
==24627== 
--24627-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--24627-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--24627-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--24627-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--24627-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--24627-- Reading syms from /lib64/libc-2.12.so
--24627--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--24627--   .. build-id is valid
--24627-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--24627-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--24627-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--24627-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--24627-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--24627-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--24627-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
--24627-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--24627-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--24627-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--24627-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--24627-- REDIR: 0x3f79e81120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--24627-- REDIR: 0x3f79f33560 (__strlen_sse42) redirected to 0x4a07f50 (strlen)
--24627-- REDIR: 0x3f79e7f470 (strcat) redirected to 0x4a07c20 (strcat)
--24627-- REDIR: 0x3f79e80b70 (strcpy) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--24627-- REDIR: 0x3f79f34000 (???) redirected to 0x4a07f90 (strcpy)
--24627-- REDIR: 0x3f79e833d0 (bcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--24627-- REDIR: 0x3f79f3e610 (__memcmp_sse4_1) redirected to 0x4a09630 (bcmp)
--24627-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--24627-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==24627== Invalid free() / delete / delete[] / realloc()
==24627==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==24627==    by 0x401E67: test_implode_XX (<stdin>:437)
==24627==    by 0x402580: main (<stdin>:583)
==24627==  Address 0x4c3c0b0 is 0 bytes inside a block of size 1 free'd
==24627==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==24627==    by 0x400F6A: destroyStringArray_sol (<stdin>:138)
==24627==    by 0x401E5B: test_implode_XX (<stdin>:436)
==24627==    by 0x402580: main (<stdin>:583)
==24627== 
==24627== 
==24627== HEAP SUMMARY:
==24627==     in use at exit: 0 bytes in 0 blocks
==24627==   total heap usage: 10 allocs, 11 frees, 123 bytes allocated
==24627== 
==24627== All heap blocks were freed -- no leaks are possible
==24627== 
==24627== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
==24627== 
==24627== 1 errors in context 1 of 1:
==24627== Invalid free() / delete / delete[] / realloc()
==24627==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==24627==    by 0x401E67: test_implode_XX (<stdin>:437)
==24627==    by 0x402580: main (<stdin>:583)
==24627==  Address 0x4c3c0b0 is 0 bytes inside a block of size 1 free'd
==24627==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==24627==    by 0x400F6A: destroyStringArray_sol (<stdin>:138)
==24627==    by 0x401E5B: test_implode_XX (<stdin>:436)
==24627==    by 0x402580: main (<stdin>:583)
==24627== 
--24627-- 
--24627-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--24627-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==24627== 
==24627== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)

test 18 :: implode(...)

   int len = 1
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("");
   const char * glue = "Z";
   char * s = implode(strArr, len, glue);
   // s is ""
   (pass.)
Memory errors detected, testcase failed.
==29621== Memcheck, a memory error detector
==29621== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==29621== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==29621== Command: /tmp/.EjTAb9/a.out 17
==29621== Parent PID: 29619
==29621== 
--29621-- 
--29621-- Valgrind options:
--29621--    --tool=memcheck
--29621--    --leak-check=full
--29621--    --verbose
--29621--    --log-file=memcheck.log
--29621-- Contents of /proc/version:
--29621--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--29621-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--29621-- Page sizes: currently 4096, max supported 4096
--29621-- Valgrind library directory: /usr/lib64/valgrind
--29621-- Reading syms from /tmp/.EjTAb9/a.out
--29621-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--29621--    object doesn't have a dynamic symbol table
--29621-- Reading syms from /lib64/ld-2.12.so
--29621--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--29621--   .. build-id is valid
--29621-- Scheduler: using generic scheduler lock implementation.
--29621-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==29621== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-29621-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==29621== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-29621-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==29621== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-29621-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==29621== 
==29621== TO CONTROL THIS PROCESS USING vgdb (which you probably
==29621== don't want to do, unless you know exactly what you're doing,
==29621== or are doing some strange experiment):
==29621==   /usr/lib64/valgrind/../../bin/vgdb --pid=29621 ...command...
==29621== 
==29621== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==29621==   /path/to/gdb /tmp/.EjTAb9/a.out
==29621== and then give GDB the following command
==29621==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=29621
==29621== --pid is optional if only one valgrind process is running
==29621== 
--29621-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--29621-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--29621-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--29621-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--29621-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--29621-- Reading syms from /lib64/libc-2.12.so
--29621--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--29621--   .. build-id is valid
--29621-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--29621-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--29621-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--29621-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--29621-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
--29621-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--29621-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--29621-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--29621-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--29621-- REDIR: 0x3f79e81120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--29621-- REDIR: 0x3f79f33560 (__strlen_sse42) redirected to 0x4a07f50 (strlen)
--29621-- REDIR: 0x3f79e7f470 (strcat) redirected to 0x4a07c20 (strcat)
--29621-- REDIR: 0x3f79e833d0 (bcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--29621-- REDIR: 0x3f79f3e610 (__memcmp_sse4_1) redirected to 0x4a09630 (bcmp)
--29621-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--29621-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==29621== Invalid free() / delete / delete[] / realloc()
==29621==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==29621==    by 0x401E67: test_implode_XX (<stdin>:437)
==29621==    by 0x40259E: main (<stdin>:584)
==29621==  Address 0x4c3c090 is 0 bytes inside a block of size 1 free'd
==29621==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==29621==    by 0x400F6A: destroyStringArray_sol (<stdin>:138)
==29621==    by 0x401E5B: test_implode_XX (<stdin>:436)
==29621==    by 0x40259E: main (<stdin>:584)
==29621== 
==29621== 
==29621== HEAP SUMMARY:
==29621==     in use at exit: 0 bytes in 0 blocks
==29621==   total heap usage: 4 allocs, 5 frees, 18 bytes allocated
==29621== 
==29621== All heap blocks were freed -- no leaks are possible
==29621== 
==29621== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
==29621== 
==29621== 1 errors in context 1 of 1:
==29621== Invalid free() / delete / delete[] / realloc()
==29621==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==29621==    by 0x401E67: test_implode_XX (<stdin>:437)
==29621==    by 0x40259E: main (<stdin>:584)
==29621==  Address 0x4c3c090 is 0 bytes inside a block of size 1 free'd
==29621==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==29621==    by 0x400F6A: destroyStringArray_sol (<stdin>:138)
==29621==    by 0x401E5B: test_implode_XX (<stdin>:436)
==29621==    by 0x40259E: main (<stdin>:584)
==29621== 
--29621-- 
--29621-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--29621-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==29621== 
==29621== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)

test 19 :: implode(...)

   int len = 1
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("");
   const char * glue = "";
   char * s = implode(strArr, len, glue);
   // s is ""
   (pass.)
Memory errors detected, testcase failed.
==2195== Memcheck, a memory error detector
==2195== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==2195== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==2195== Command: /tmp/.EjTAb9/a.out 18
==2195== Parent PID: 2194
==2195== 
--2195-- 
--2195-- Valgrind options:
--2195--    --tool=memcheck
--2195--    --leak-check=full
--2195--    --verbose
--2195--    --log-file=memcheck.log
--2195-- Contents of /proc/version:
--2195--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--2195-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--2195-- Page sizes: currently 4096, max supported 4096
--2195-- Valgrind library directory: /usr/lib64/valgrind
--2195-- Reading syms from /tmp/.EjTAb9/a.out
--2195-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--2195--    object doesn't have a dynamic symbol table
--2195-- Reading syms from /lib64/ld-2.12.so
--2195--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--2195--   .. build-id is valid
--2195-- Scheduler: using generic scheduler lock implementation.
--2195-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==2195== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-2195-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==2195== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-2195-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==2195== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-2195-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==2195== 
==2195== TO CONTROL THIS PROCESS USING vgdb (which you probably
==2195== don't want to do, unless you know exactly what you're doing,
==2195== or are doing some strange experiment):
==2195==   /usr/lib64/valgrind/../../bin/vgdb --pid=2195 ...command...
==2195== 
==2195== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==2195==   /path/to/gdb /tmp/.EjTAb9/a.out
==2195== and then give GDB the following command
==2195==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=2195
==2195== --pid is optional if only one valgrind process is running
==2195== 
--2195-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--2195-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--2195-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--2195-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--2195-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--2195-- Reading syms from /lib64/libc-2.12.so
--2195--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--2195--   .. build-id is valid
--2195-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--2195-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--2195-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--2195-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--2195-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
--2195-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--2195-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--2195-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--2195-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--2195-- REDIR: 0x3f79e81120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--2195-- REDIR: 0x3f79f33560 (__strlen_sse42) redirected to 0x4a07f50 (strlen)
--2195-- REDIR: 0x3f79e7f470 (strcat) redirected to 0x4a07c20 (strcat)
--2195-- REDIR: 0x3f79e833d0 (bcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--2195-- REDIR: 0x3f79f3e610 (__memcmp_sse4_1) redirected to 0x4a09630 (bcmp)
--2195-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--2195-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==2195== Invalid free() / delete / delete[] / realloc()
==2195==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==2195==    by 0x401E67: test_implode_XX (<stdin>:437)
==2195==    by 0x4025BC: main (<stdin>:585)
==2195==  Address 0x4c3c090 is 0 bytes inside a block of size 1 free'd
==2195==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==2195==    by 0x400F6A: destroyStringArray_sol (<stdin>:138)
==2195==    by 0x401E5B: test_implode_XX (<stdin>:436)
==2195==    by 0x4025BC: main (<stdin>:585)
==2195== 
==2195== 
==2195== HEAP SUMMARY:
==2195==     in use at exit: 0 bytes in 0 blocks
==2195==   total heap usage: 4 allocs, 5 frees, 18 bytes allocated
==2195== 
==2195== All heap blocks were freed -- no leaks are possible
==2195== 
==2195== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
==2195== 
==2195== 1 errors in context 1 of 1:
==2195== Invalid free() / delete / delete[] / realloc()
==2195==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==2195==    by 0x401E67: test_implode_XX (<stdin>:437)
==2195==    by 0x4025BC: main (<stdin>:585)
==2195==  Address 0x4c3c090 is 0 bytes inside a block of size 1 free'd
==2195==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==2195==    by 0x400F6A: destroyStringArray_sol (<stdin>:138)
==2195==    by 0x401E5B: test_implode_XX (<stdin>:436)
==2195==    by 0x4025BC: main (<stdin>:585)
==2195== 
--2195-- 
--2195-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--2195-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==2195== 
==2195== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)

test 20 :: implode(...)

   int len = 25
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("The");
   strArr[1] = strdup("more");
   strArr[2] = strdup("that");
   strArr[3] = strdup("you");
   strArr[4] = strdup("read");
   strArr[5] = strdup("");
   strArr[6] = strdup("the");
   strArr[7] = strdup("more");
   strArr[8] = strdup("things");
   strArr[9] = strdup("you");
   strArr[10] = strdup("will");
   strArr[11] = strdup("know");
   strArr[12] = strdup("");
   strArr[13] = strdup("The");
   strArr[14] = strdup("more");
   strArr[15] = strdup("that");
   strArr[16] = strdup("you");
   strArr[17] = strdup("learn");
   strArr[18] = strdup("");
   strArr[19] = strdup("the");
   strArr[20] = strdup("more");
   strArr[21] = strdup("places");
   strArr[22] = strdup("you\'ll");
   strArr[23] = strdup("go");
   strArr[24] = strdup("");
   const char * glue = " -- ";
   char * s = implode(strArr, len, glue);
   // s is "The"
   FAIL
   // expected: "The -- more -- that -- you -- read --  -- the -- more -- things -- you -- will -- know --  -- The -- more -- that -- you -- learn --  -- the -- more -- places -- you\'ll -- go -- "
Memory errors detected, testcase failed.
==6629== Memcheck, a memory error detector
==6629== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==6629== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==6629== Command: /tmp/.EjTAb9/a.out 19
==6629== Parent PID: 6627
==6629== 
--6629-- 
--6629-- Valgrind options:
--6629--    --tool=memcheck
--6629--    --leak-check=full
--6629--    --verbose
--6629--    --log-file=memcheck.log
--6629-- Contents of /proc/version:
--6629--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--6629-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--6629-- Page sizes: currently 4096, max supported 4096
--6629-- Valgrind library directory: /usr/lib64/valgrind
--6629-- Reading syms from /tmp/.EjTAb9/a.out
--6629-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--6629--    object doesn't have a dynamic symbol table
--6629-- Reading syms from /lib64/ld-2.12.so
--6629--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--6629--   .. build-id is valid
--6629-- Scheduler: using generic scheduler lock implementation.
--6629-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==6629== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-6629-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==6629== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-6629-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==6629== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-6629-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==6629== 
==6629== TO CONTROL THIS PROCESS USING vgdb (which you probably
==6629== don't want to do, unless you know exactly what you're doing,
==6629== or are doing some strange experiment):
==6629==   /usr/lib64/valgrind/../../bin/vgdb --pid=6629 ...command...
==6629== 
==6629== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==6629==   /path/to/gdb /tmp/.EjTAb9/a.out
==6629== and then give GDB the following command
==6629==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=6629
==6629== --pid is optional if only one valgrind process is running
==6629== 
--6629-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--6629-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--6629-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--6629-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--6629-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--6629-- Reading syms from /lib64/libc-2.12.so
--6629--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--6629--   .. build-id is valid
--6629-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--6629-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--6629-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--6629-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--6629-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--6629-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--6629-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
--6629-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--6629-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--6629-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--6629-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--6629-- REDIR: 0x3f79e81120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--6629-- REDIR: 0x3f79f33560 (__strlen_sse42) redirected to 0x4a07f50 (strlen)
--6629-- REDIR: 0x3f79e7f470 (strcat) redirected to 0x4a07c20 (strcat)
--6629-- REDIR: 0x3f79e80b70 (strcpy) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--6629-- REDIR: 0x3f79f34000 (???) redirected to 0x4a07f90 (strcpy)
--6629-- REDIR: 0x3f79e833d0 (bcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--6629-- REDIR: 0x3f79f3e610 (__memcmp_sse4_1) redirected to 0x4a09630 (bcmp)
--6629-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--6629-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==6629== Invalid free() / delete / delete[] / realloc()
==6629==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==6629==    by 0x401E67: test_implode_XX (<stdin>:437)
==6629==    by 0x4025DF: main (<stdin>:586)
==6629==  Address 0x4c3c150 is 0 bytes inside a block of size 4 free'd
==6629==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==6629==    by 0x400F6A: destroyStringArray_sol (<stdin>:138)
==6629==    by 0x401E5B: test_implode_XX (<stdin>:436)
==6629==    by 0x4025DF: main (<stdin>:586)
==6629== 
==6629== 
==6629== HEAP SUMMARY:
==6629==     in use at exit: 0 bytes in 0 blocks
==6629==   total heap usage: 33 allocs, 34 frees, 1,059 bytes allocated
==6629== 
==6629== All heap blocks were freed -- no leaks are possible
==6629== 
==6629== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
==6629== 
==6629== 1 errors in context 1 of 1:
==6629== Invalid free() / delete / delete[] / realloc()
==6629==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==6629==    by 0x401E67: test_implode_XX (<stdin>:437)
==6629==    by 0x4025DF: main (<stdin>:586)
==6629==  Address 0x4c3c150 is 0 bytes inside a block of size 4 free'd
==6629==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==6629==    by 0x400F6A: destroyStringArray_sol (<stdin>:138)
==6629==    by 0x401E5B: test_implode_XX (<stdin>:436)
==6629==    by 0x4025DF: main (<stdin>:586)
==6629== 
--6629-- 
--6629-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--6629-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==6629== 
==6629== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)

test 21 :: implode(...)

   int len = 35
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("Twas brillig, and the slithy toves");
   strArr[1] = strdup("Did gyre and gimble in the wabe:");
   strArr[2] = strdup("All mimsy were the borogoves,");
   strArr[3] = strdup("And the mome raths outgrabe.");
   strArr[4] = strdup("");
   strArr[5] = strdup("Beware the Jabberwock, my son!");
   strArr[6] = strdup("The jaws that bite, the claws that catch!");
   strArr[7] = strdup("Beware the Jubjub bird, and shun");
   strArr[8] = strdup("The frumious Bandersnatch!");
   strArr[9] = strdup("");
   strArr[10] = strdup("He took his vorpal sword in hand:");
   strArr[11] = strdup("Long time the manxome foe he sought --");
   strArr[12] = strdup("So rested he by the Tumtum tree,");
   strArr[13] = strdup("And stood awhile in thought.");
   strArr[14] = strdup("");
   strArr[15] = strdup("And, as in uffish thought he stood,");
   strArr[16] = strdup("The Jabberwock, with eyes of flame,");
   strArr[17] = strdup("Came whiffling through the tulgey wood,");
   strArr[18] = strdup("And burbled as it came!");
   strArr[19] = strdup("");
   strArr[20] = strdup("One, two! One, two! And through and through");
   strArr[21] = strdup("The vorpal blade went snicker-snack!");
   strArr[22] = strdup("He left it dead, and with its head");
   strArr[23] = strdup("He went galumphing back.");
   strArr[24] = strdup("");
   strArr[25] = strdup("And, has thou slain the Jabberwock?");
   strArr[26] = strdup("Come to my arms, my beamish boy!");
   strArr[27] = strdup("O frabjous day! Callooh! Callay!");
   strArr[28] = strdup("He chortled in his joy.");
   strArr[29] = strdup("");
   strArr[30] = strdup("Twas brillig, and the slithy toves");
   strArr[31] = strdup("Did gyre and gimble in the wabe;");
   strArr[32] = strdup("All mimsy were the borogoves,");
   strArr[33] = strdup("And the mome raths outgrabe.");
   strArr[34] = strdup("");
   const char * glue = ";\n";
   char * s = implode(strArr, len, glue);
   // s is "Twas brillig, and the slithy toves"
   FAIL
   // expected: "Twas brillig, and the slithy toves;\nDid gyre and gimble in the wabe:;\nAll mimsy were the borogoves,;\nAnd the mome raths outgrabe.;\n;\nBeware the Jabberwock, my son!;\nThe jaws that bite, the claws that catch!;\nBeware the Jubjub bird, and shun;\nThe frumious Bandersnatch!;\n;\nHe took his vorpal sword in hand:;\nLong time the manxome foe he sought --;\nSo rested he by the Tumtum tree,;\nAnd stood awhile in thought.;\n;\nAnd, as in uffish thought he stood,;\nThe Jabberwock, with eyes of flame,;\nCame whiffling through the tulgey wood,;\nAnd burbled as it came!;\n;\nOne, two! One, two! And through and through;\nThe vorpal blade went snicker-snack!;\nHe left it dead, and with its head;\nHe went galumphing back.;\n;\nAnd, has thou slain the Jabberwock?;\nCome to my arms, my beamish boy!;\nO frabjous day! Callooh! Callay!;\nHe chortled in his joy.;\n;\nTwas brillig, and the slithy toves;\nDid gyre and gimble in the wabe;;\nAll mimsy were the borogoves,;\nAnd the mome raths outgrabe.;\n"
Memory errors detected, testcase failed.
==11255== Memcheck, a memory error detector
==11255== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==11255== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==11255== Command: /tmp/.EjTAb9/a.out 20
==11255== Parent PID: 11254
==11255== 
--11255-- 
--11255-- Valgrind options:
--11255--    --tool=memcheck
--11255--    --leak-check=full
--11255--    --verbose
--11255--    --log-file=memcheck.log
--11255-- Contents of /proc/version:
--11255--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--11255-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--11255-- Page sizes: currently 4096, max supported 4096
--11255-- Valgrind library directory: /usr/lib64/valgrind
--11255-- Reading syms from /tmp/.EjTAb9/a.out
--11255-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--11255--    object doesn't have a dynamic symbol table
--11255-- Reading syms from /lib64/ld-2.12.so
--11255--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--11255--   .. build-id is valid
--11255-- Scheduler: using generic scheduler lock implementation.
--11255-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==11255== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-11255-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==11255== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-11255-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==11255== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-11255-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==11255== 
==11255== TO CONTROL THIS PROCESS USING vgdb (which you probably
==11255== don't want to do, unless you know exactly what you're doing,
==11255== or are doing some strange experiment):
==11255==   /usr/lib64/valgrind/../../bin/vgdb --pid=11255 ...command...
==11255== 
==11255== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==11255==   /path/to/gdb /tmp/.EjTAb9/a.out
==11255== and then give GDB the following command
==11255==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=11255
==11255== --pid is optional if only one valgrind process is running
==11255== 
--11255-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--11255-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--11255-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--11255-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--11255-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--11255-- Reading syms from /lib64/libc-2.12.so
--11255--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--11255--   .. build-id is valid
--11255-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--11255-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--11255-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--11255-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--11255-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--11255-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--11255-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
--11255-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--11255-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--11255-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--11255-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--11255-- REDIR: 0x3f79e81120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--11255-- REDIR: 0x3f79f33560 (__strlen_sse42) redirected to 0x4a07f50 (strlen)
--11255-- REDIR: 0x3f79e7f470 (strcat) redirected to 0x4a07c20 (strcat)
--11255-- REDIR: 0x3f79e80b70 (strcpy) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--11255-- REDIR: 0x3f79f34000 (???) redirected to 0x4a07f90 (strcpy)
--11255-- REDIR: 0x3f79e833d0 (bcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--11255-- REDIR: 0x3f79f3e610 (__memcmp_sse4_1) redirected to 0x4a09630 (bcmp)
--11255-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--11255-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==11255== Invalid free() / delete / delete[] / realloc()
==11255==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==11255==    by 0x401E67: test_implode_XX (<stdin>:437)
==11255==    by 0x402602: main (<stdin>:587)
==11255==  Address 0x4c3c1a0 is 0 bytes inside a block of size 35 free'd
==11255==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==11255==    by 0x400F6A: destroyStringArray_sol (<stdin>:138)
==11255==    by 0x401E5B: test_implode_XX (<stdin>:436)
==11255==    by 0x402602: main (<stdin>:587)
==11255== 
==11255== 
==11255== HEAP SUMMARY:
==11255==     in use at exit: 0 bytes in 0 blocks
==11255==   total heap usage: 42 allocs, 43 frees, 4,117 bytes allocated
==11255== 
==11255== All heap blocks were freed -- no leaks are possible
==11255== 
==11255== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
==11255== 
==11255== 1 errors in context 1 of 1:
==11255== Invalid free() / delete / delete[] / realloc()
==11255==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==11255==    by 0x401E67: test_implode_XX (<stdin>:437)
==11255==    by 0x402602: main (<stdin>:587)
==11255==  Address 0x4c3c1a0 is 0 bytes inside a block of size 35 free'd
==11255==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==11255==    by 0x400F6A: destroyStringArray_sol (<stdin>:138)
==11255==    by 0x401E5B: test_implode_XX (<stdin>:436)
==11255==    by 0x402602: main (<stdin>:587)
==11255== 
--11255-- 
--11255-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--11255-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==11255== 
==11255== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)

test 22 :: implode(...)

   int len = 6
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("1");
   strArr[1] = strdup("2");
   strArr[2] = strdup("3");
   strArr[3] = strdup("4");
   strArr[4] = strdup("5");
   strArr[5] = strdup("6");
   const char * glue = ", ";
   char * s = implode(strArr, len, glue);
   // s is "1"
   FAIL
   // expected: "1, 2, 3, 4, 5, 6"
Memory errors detected, testcase failed.
==16700== Memcheck, a memory error detector
==16700== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==16700== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==16700== Command: /tmp/.EjTAb9/a.out 21
==16700== Parent PID: 16699
==16700== 
--16700-- 
--16700-- Valgrind options:
--16700--    --tool=memcheck
--16700--    --leak-check=full
--16700--    --verbose
--16700--    --log-file=memcheck.log
--16700-- Contents of /proc/version:
--16700--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--16700-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--16700-- Page sizes: currently 4096, max supported 4096
--16700-- Valgrind library directory: /usr/lib64/valgrind
--16700-- Reading syms from /tmp/.EjTAb9/a.out
--16700-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--16700--    object doesn't have a dynamic symbol table
--16700-- Reading syms from /lib64/ld-2.12.so
--16700--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--16700--   .. build-id is valid
--16700-- Scheduler: using generic scheduler lock implementation.
--16700-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==16700== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-16700-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==16700== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-16700-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==16700== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-16700-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==16700== 
==16700== TO CONTROL THIS PROCESS USING vgdb (which you probably
==16700== don't want to do, unless you know exactly what you're doing,
==16700== or are doing some strange experiment):
==16700==   /usr/lib64/valgrind/../../bin/vgdb --pid=16700 ...command...
==16700== 
==16700== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==16700==   /path/to/gdb /tmp/.EjTAb9/a.out
==16700== and then give GDB the following command
==16700==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=16700
==16700== --pid is optional if only one valgrind process is running
==16700== 
--16700-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--16700-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--16700-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--16700-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--16700-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--16700-- Reading syms from /lib64/libc-2.12.so
--16700--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--16700--   .. build-id is valid
--16700-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16700-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16700-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--16700-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16700-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--16700-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--16700-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
--16700-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--16700-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--16700-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--16700-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
--16700-- REDIR: 0x3f79e81120 (strlen) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16700-- REDIR: 0x3f79f33560 (__strlen_sse42) redirected to 0x4a07f50 (strlen)
--16700-- REDIR: 0x3f79e7f470 (strcat) redirected to 0x4a07c20 (strcat)
--16700-- REDIR: 0x3f79e80b70 (strcpy) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16700-- REDIR: 0x3f79f34000 (???) redirected to 0x4a07f90 (strcpy)
--16700-- REDIR: 0x3f79e833d0 (bcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16700-- REDIR: 0x3f79f3e610 (__memcmp_sse4_1) redirected to 0x4a09630 (bcmp)
--16700-- REDIR: 0x3f79e7f6e0 (strcmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--16700-- REDIR: 0x3f79f28290 (__strcmp_sse42) redirected to 0x4a08490 (strcmp)
==16700== Invalid free() / delete / delete[] / realloc()
==16700==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==16700==    by 0x401E67: test_implode_XX (<stdin>:437)
==16700==    by 0x402620: main (<stdin>:588)
==16700==  Address 0x4c3c0b0 is 0 bytes inside a block of size 2 free'd
==16700==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==16700==    by 0x400F6A: destroyStringArray_sol (<stdin>:138)
==16700==    by 0x401E5B: test_implode_XX (<stdin>:436)
==16700==    by 0x402620: main (<stdin>:588)
==16700== 
==16700== 
==16700== HEAP SUMMARY:
==16700==     in use at exit: 0 bytes in 0 blocks
==16700==   total heap usage: 12 allocs, 13 frees, 164 bytes allocated
==16700== 
==16700== All heap blocks were freed -- no leaks are possible
==16700== 
==16700== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
==16700== 
==16700== 1 errors in context 1 of 1:
==16700== Invalid free() / delete / delete[] / realloc()
==16700==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==16700==    by 0x401E67: test_implode_XX (<stdin>:437)
==16700==    by 0x402620: main (<stdin>:588)
==16700==  Address 0x4c3c0b0 is 0 bytes inside a block of size 2 free'd
==16700==    at 0x4A063F0: free (vg_replace_malloc.c:446)
==16700==    by 0x400F6A: destroyStringArray_sol (<stdin>:138)
==16700==    by 0x401E5B: test_implode_XX (<stdin>:436)
==16700==    by 0x402620: main (<stdin>:588)
==16700== 
--16700-- 
--16700-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--16700-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==16700== 
==16700== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)

test 23 :: sortStringArray(...)

   int len = 3
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("lady");
   strArr[1] = strdup("beatle");
   strArr[2] = strdup("brew");
   sortStringArray(strArr, len);
   // strArr[0] is "lady", ERROR, expected "beatle"
   // strArr[1] is "beatle", ERROR, expected "brew"
   // strArr[2] is "brew", ERROR, expected "lady"
   FAIL

test 24 :: sortStringArray(...)

   int len = 1
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("");
   sortStringArray(strArr, len);
   // strArr[0] is ""
   (pass.)

test 25 :: sortStringArray(...)

   int len = 35
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("Twas brillig, and the slithy toves");
   strArr[1] = strdup("Did gyre and gimble in the wabe:");
   strArr[2] = strdup("All mimsy were the borogoves,");
   strArr[3] = strdup("And the mome raths outgrabe.");
   strArr[4] = strdup("");
   strArr[5] = strdup("Beware the Jabberwock, my son!");
   strArr[6] = strdup("The jaws that bite, the claws that catch!");
   strArr[7] = strdup("Beware the Jubjub bird, and shun");
   strArr[8] = strdup("The frumious Bandersnatch!");
   strArr[9] = strdup("");
   strArr[10] = strdup("He took his vorpal sword in hand:");
   strArr[11] = strdup("Long time the manxome foe he sought --");
   strArr[12] = strdup("So rested he by the Tumtum tree,");
   strArr[13] = strdup("And stood awhile in thought.");
   strArr[14] = strdup("");
   strArr[15] = strdup("And, as in uffish thought he stood,");
   strArr[16] = strdup("The Jabberwock, with eyes of flame,");
   strArr[17] = strdup("Came whiffling through the tulgey wood,");
   strArr[18] = strdup("And burbled as it came!");
   strArr[19] = strdup("");
   strArr[20] = strdup("One, two! One, two! And through and through");
   strArr[21] = strdup("The vorpal blade went snicker-snack!");
   strArr[22] = strdup("He left it dead, and with its head");
   strArr[23] = strdup("He went galumphing back.");
   strArr[24] = strdup("");
   strArr[25] = strdup("And, has thou slain the Jabberwock?");
   strArr[26] = strdup("Come to my arms, my beamish boy!");
   strArr[27] = strdup("O frabjous day! Callooh! Callay!");
   strArr[28] = strdup("He chortled in his joy.");
   strArr[29] = strdup("");
   strArr[30] = strdup("Twas brillig, and the slithy toves");
   strArr[31] = strdup("Did gyre and gimble in the wabe;");
   strArr[32] = strdup("All mimsy were the borogoves,");
   strArr[33] = strdup("And the mome raths outgrabe.");
   strArr[34] = strdup("");
   sortStringArray(strArr, len);
   // strArr[0] is "Twas brillig, and the slithy toves", ERROR, expected ""
   // strArr[1] is "Did gyre and gimble in the wabe:", ERROR, expected ""
   // strArr[2] is "All mimsy were the borogoves,", ERROR, expected ""
   // strArr[3] is "And the mome raths outgrabe.", ERROR, expected ""
   // strArr[4] is ""
   // strArr[5] is "Beware the Jabberwock, my son!", ERROR, expected ""
   // strArr[6] is "The jaws that bite, the claws that catch!", ERROR, expected ""
   // strArr[7] is "Beware the Jubjub bird, and shun", ERROR, expected "All mimsy were the borogoves,"
   // strArr[8] is "The frumious Bandersnatch!", ERROR, expected "All mimsy were the borogoves,"
   // strArr[9] is "", ERROR, expected "And burbled as it came!"
   // strArr[10] is "He took his vorpal sword in hand:", ERROR, expected "And stood awhile in thought."
   // strArr[11] is "Long time the manxome foe he sought --", ERROR, expected "And the mome raths outgrabe."
   // strArr[12] is "So rested he by the Tumtum tree,", ERROR, expected "And the mome raths outgrabe."
   // strArr[13] is "And stood awhile in thought.", ERROR, expected "And, as in uffish thought he stood,"
   // strArr[14] is "", ERROR, expected "And, has thou slain the Jabberwock?"
   // strArr[15] is "And, as in uffish thought he stood,", ERROR, expected "Beware the Jabberwock, my son!"
   // strArr[16] is "The Jabberwock, with eyes of flame,", ERROR, expected "Beware the Jubjub bird, and shun"
   // strArr[17] is "Came whiffling through the tulgey wood,"
   // strArr[18] is "And burbled as it came!", ERROR, expected "Come to my arms, my beamish boy!"
   // strArr[19] is "", ERROR, expected "Did gyre and gimble in the wabe:"
   // strArr[20] is "One, two! One, two! And through and through", ERROR, expected "Did gyre and gimble in the wabe;"
   // strArr[21] is "The vorpal blade went snicker-snack!", ERROR, expected "He chortled in his joy."
   // strArr[22] is "He left it dead, and with its head"
   // strArr[23] is "He went galumphing back.", ERROR, expected "He took his vorpal sword in hand:"
   // strArr[24] is "", ERROR, expected "He went galumphing back."
   // strArr[25] is "And, has thou slain the Jabberwock?", ERROR, expected "Long time the manxome foe he sought --"
   // strArr[26] is "Come to my arms, my beamish boy!", ERROR, expected "O frabjous day! Callooh! Callay!"
   // strArr[27] is "O frabjous day! Callooh! Callay!", ERROR, expected "One, two! One, two! And through and through"
   // strArr[28] is "He chortled in his joy.", ERROR, expected "So rested he by the Tumtum tree,"
   // strArr[29] is "", ERROR, expected "The Jabberwock, with eyes of flame,"
   // strArr[30] is "Twas brillig, and the slithy toves", ERROR, expected "The frumious Bandersnatch!"
   // strArr[31] is "Did gyre and gimble in the wabe;", ERROR, expected "The jaws that bite, the claws that catch!"
   // strArr[32] is "All mimsy were the borogoves,", ERROR, expected "The vorpal blade went snicker-snack!"
   // strArr[33] is "And the mome raths outgrabe.", ERROR, expected "Twas brillig, and the slithy toves"
   // strArr[34] is "", ERROR, expected "Twas brillig, and the slithy toves"
   FAIL

test 26 :: sortStringCharacters(...)

   char * s1 = strdup("The more that you read, the more things you will know. The more that you learn, the more places you\'ll go.");
   sortStringCharacters(s1)
   // s1 is now "The more that you read, the more things you will know. The more that you learn, the more places you\'ll go.", ERROR, expected "                    \',,..TTaaaaacdeeeeeeeeeeegghhhhhhhiikllllllmmmmnnnooooooooooprrrrrrsstttttttuuuuwwyyyy"

test 27 :: sortStringCharacters(...)

   char * s1 = strdup("How did it get so late so soon?");
   sortStringCharacters(s1)
   // s1 is now "How did it get so late so soon?", ERROR, expected "       ?Haddeegiilnooooossstttw"

test 28 :: sortStringCharacters(...)

   char * s1 = strdup("Twas brillig, and the slithy toves\nDid gyre and gimble in the wabe:\nAll mimsy were the borogoves,\nAnd the mome raths outgrabe.\n\nBeware the Jabberwock, my son!\nThe jaws that bite, the claws that catch!\nBeware the Jubjub bird, and shun\nThe frumious Bandersnatch!\n\nHe took his vorpal sword in hand:\nLong time the manxome foe he sought --\nSo rested he by the Tumtum tree,\nAnd stood awhile in thought.\n\nAnd, as in uffish thought he stood,\nThe Jabberwock, with eyes of flame,\nCame whiffling through the tulgey wood,\nAnd burbled as it came!\n\nOne, two! One, two! And through and through\nThe vorpal blade went snicker-snack!\nHe left it dead, and with its head\nHe went galumphing back.\n\nAnd, has thou slain the Jabberwock?\nCome to my arms, my beamish boy!\nO frabjous day! Callooh! Callay!\nHe chortled in his joy.\n\nTwas brillig, and the slithy toves\nDid gyre and gimble in the wabe;\nAll mimsy were the borogoves,\nAnd the mome raths outgrabe.\n");
   sortStringCharacters(s1)
   // s1 is now "Twas brillig, and the slithy toves\nDid gyre and gimble in the wabe:\nAll mimsy were the borogoves,\nAnd the mome raths outgrabe.\n\nBeware the Jabberwock, my son!\nThe jaws that bite, the claws that catch!\nBeware the Jubjub bird, and shun\nThe frumious Bandersnatch!\n\nHe took his vorpal sword in hand:\nLong time the manxome foe he sought --\nSo rested he by the Tumtum tree,\nAnd stood awhile in thought.\n\nAnd, as in uffish thought he stood,\nThe Jabberwock, with eyes of flame,\nCame whiffling through the tulgey wood,\nAnd burbled as it came!\n\nOne, two! One, two! And through and through\nThe vorpal blade went snicker-snack!\nHe left it dead, and with its head\nHe went galumphing back.\n\nAnd, has thou slain the Jabberwock?\nCome to my arms, my beamish boy!\nO frabjous day! Callooh! Callay!\nHe chortled in his joy.\n\nTwas brillig, and the slithy toves\nDid gyre and gimble in the wabe;\nAll mimsy were the borogoves,\nAnd the mome raths outgrabe.\n", ERROR, expected "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                                                                                                                                           !!!!!!!!!!!,,,,,,,,,,,,,,,,,,---.....::;?AAAAAAAAABBBCCCCDDHHHHJJJJLOOOSTTTTTTTaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbccccccccccccdddddddddddddddddddddddddddddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeffffffffffggggggggggggggggggggghhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiijjjjkkkkkkklllllllllllllllllllllllllllllmmmmmmmmmmmmmmmmmmmmmmmmmmnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnooooooooooooooooooooooooooooooooooooooooooooooooooppprrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrssssssssssssssssssssssssssssssssssssstttttttttttttttttttttttttttttttttttttttttttttttttttttttttttuuuuuuuuuuuuuuuuuuuuuvvvvvvwwwwwwwwwwwwwwwwwwwwwwwxyyyyyyyyyyyyyyyy"

test 29 :: sortStringCharacters(...)

   char * s1 = strdup("");
   sortStringCharacters(s1)
   // s1 is now ""

test 30 :: destroyStringArray(...)

   int len = 3
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("lady");
   strArr[1] = strdup("beatle");
   strArr[2] = strdup("brew");
   destroyStringArray(strArr, len);
   // Pass conditional on no memory errors
Memory errors detected, testcase failed.
==27776== Memcheck, a memory error detector
==27776== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==27776== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==27776== Command: /tmp/.EjTAb9/a.out 29
==27776== Parent PID: 27775
==27776== 
--27776-- 
--27776-- Valgrind options:
--27776--    --tool=memcheck
--27776--    --leak-check=full
--27776--    --verbose
--27776--    --log-file=memcheck.log
--27776-- Contents of /proc/version:
--27776--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--27776-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--27776-- Page sizes: currently 4096, max supported 4096
--27776-- Valgrind library directory: /usr/lib64/valgrind
--27776-- Reading syms from /tmp/.EjTAb9/a.out
--27776-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--27776--    object doesn't have a dynamic symbol table
--27776-- Reading syms from /lib64/ld-2.12.so
--27776--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--27776--   .. build-id is valid
--27776-- Scheduler: using generic scheduler lock implementation.
--27776-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==27776== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-27776-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==27776== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-27776-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==27776== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-27776-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==27776== 
==27776== TO CONTROL THIS PROCESS USING vgdb (which you probably
==27776== don't want to do, unless you know exactly what you're doing,
==27776== or are doing some strange experiment):
==27776==   /usr/lib64/valgrind/../../bin/vgdb --pid=27776 ...command...
==27776== 
==27776== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==27776==   /path/to/gdb /tmp/.EjTAb9/a.out
==27776== and then give GDB the following command
==27776==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=27776
==27776== --pid is optional if only one valgrind process is running
==27776== 
--27776-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--27776-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--27776-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--27776-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--27776-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--27776-- Reading syms from /lib64/libc-2.12.so
--27776--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--27776--   .. build-id is valid
--27776-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--27776-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--27776-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--27776-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--27776-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--27776-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--27776-- REDIR: 0x3f79e7f630 (index) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--27776-- REDIR: 0x3f79f281e0 (__strchr_sse42) redirected to 0x4a07b00 (index)
--27776-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--27776-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
--27776-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
==27776== 
==27776== HEAP SUMMARY:
==27776==     in use at exit: 41 bytes in 4 blocks
==27776==   total heap usage: 4 allocs, 0 frees, 41 bytes allocated
==27776== 
==27776== Searching for pointers to 4 not-freed blocks
==27776== Checked 64,600 bytes
==27776== 
==27776== 41 (24 direct, 17 indirect) bytes in 1 blocks are definitely lost in loss record 3 of 3
==27776==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==27776==    by 0x400C93: explode_sol (<stdin>:72)
==27776==    by 0x4022B4: test_destroyStringArray_XX (<stdin>:538)
==27776==    by 0x4026E2: main (<stdin>:596)
==27776== 
==27776== LEAK SUMMARY:
==27776==    definitely lost: 24 bytes in 1 blocks
==27776==    indirectly lost: 17 bytes in 3 blocks
==27776==      possibly lost: 0 bytes in 0 blocks
==27776==    still reachable: 0 bytes in 0 blocks
==27776==         suppressed: 0 bytes in 0 blocks
==27776== 
==27776== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
--27776-- 
--27776-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--27776-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==27776== 
==27776== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)

test 31 :: destroyStringArray(...)

   int len = 1
   char * * strArr = malloc(len * sizeof(char*));
   strArr[0] = strdup("");
   destroyStringArray(strArr, len);
   // Pass conditional on no memory errors
Memory errors detected, testcase failed.
==953== Memcheck, a memory error detector
==953== Copyright (C) 2002-2012, and GNU GPL'd, by Julian Seward et al.
==953== Using Valgrind-3.8.1 and LibVEX; rerun with -h for copyright info
==953== Command: /tmp/.EjTAb9/a.out 30
==953== Parent PID: 952
==953== 
--953-- 
--953-- Valgrind options:
--953--    --tool=memcheck
--953--    --leak-check=full
--953--    --verbose
--953--    --log-file=memcheck.log
--953-- Contents of /proc/version:
--953--   Linux version 2.6.32-431.29.2.el6.x86_64 (mockbuild@x86-026.build.eng.bos.redhat.com) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC) ) #1 SMP Sun Jul 27 15:55:46 EDT 2014
--953-- Arch and hwcaps: AMD64, amd64-sse3-cx16
--953-- Page sizes: currently 4096, max supported 4096
--953-- Valgrind library directory: /usr/lib64/valgrind
--953-- Reading syms from /tmp/.EjTAb9/a.out
--953-- Reading syms from /usr/lib64/valgrind/memcheck-amd64-linux
--953--    object doesn't have a dynamic symbol table
--953-- Reading syms from /lib64/ld-2.12.so
--953--   Considering /usr/lib/debug/.build-id/57/bf668f99b7f5917b8d55fbb645173c9a644575.debug ..
--953--   .. build-id is valid
--953-- Scheduler: using generic scheduler lock implementation.
--953-- Reading suppressions file: /usr/lib64/valgrind/default.supp
==953== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-953-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==953== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-953-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==953== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-953-by-vmanja-on-ecegrid-thin1.ecn.purdue.edu
==953== 
==953== TO CONTROL THIS PROCESS USING vgdb (which you probably
==953== don't want to do, unless you know exactly what you're doing,
==953== or are doing some strange experiment):
==953==   /usr/lib64/valgrind/../../bin/vgdb --pid=953 ...command...
==953== 
==953== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==953==   /path/to/gdb /tmp/.EjTAb9/a.out
==953== and then give GDB the following command
==953==   target remote | /usr/lib64/valgrind/../../bin/vgdb --pid=953
==953== --pid is optional if only one valgrind process is running
==953== 
--953-- REDIR: 0x3f79a17530 (strlen) redirected to 0x38049551 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--953-- Reading syms from /usr/lib64/valgrind/vgpreload_core-amd64-linux.so
--953-- Reading syms from /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so
--953-- REDIR: 0x3f79a173a0 (index) redirected to 0x4a07bf0 (index)
--953-- REDIR: 0x3f79a17420 (strcmp) redirected to 0x4a08530 (strcmp)
--953-- Reading syms from /lib64/libc-2.12.so
--953--   Considering /usr/lib/debug/.build-id/07/b5ce35eba864a01b697f5ca117e94b9248064f.debug ..
--953--   .. build-id is valid
--953-- REDIR: 0x3f79e84cd0 (strcasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--953-- REDIR: 0x3f79e86f90 (strncasecmp) redirected to 0x480155c (_vgnU_ifunc_wrapper)
--953-- REDIR: 0x3f79e82c40 (__GI_strrchr) redirected to 0x4a07a70 (__GI_strrchr)
--953-- REDIR: 0x3f79e8aaf0 (strchrnul) redirected to 0x4a09f10 (strchrnul)
--953-- REDIR: 0x3f79e84500 (mempcpy) redirected to 0x4a09f80 (mempcpy)
--953-- REDIR: 0x3f79e7b520 (free) redirected to 0x4a06369 (free)
--953-- REDIR: 0x3f79e7a640 (malloc) redirected to 0x4a0696c (malloc)
--953-- REDIR: 0x3f79e89670 (memcpy) redirected to 0x4a08b20 (memcpy)
--953-- REDIR: 0x3f79e81160 (__GI_strlen) redirected to 0x4a07f70 (__GI_strlen)
==953== 
==953== HEAP SUMMARY:
==953==     in use at exit: 9 bytes in 2 blocks
==953==   total heap usage: 2 allocs, 0 frees, 9 bytes allocated
==953== 
==953== Searching for pointers to 2 not-freed blocks
==953== Checked 64,600 bytes
==953== 
==953== 9 (8 direct, 1 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 2
==953==    at 0x4A069EE: malloc (vg_replace_malloc.c:270)
==953==    by 0x400C93: explode_sol (<stdin>:72)
==953==    by 0x4022B4: test_destroyStringArray_XX (<stdin>:538)
==953==    by 0x4026F8: main (<stdin>:597)
==953== 
==953== LEAK SUMMARY:
==953==    definitely lost: 8 bytes in 1 blocks
==953==    indirectly lost: 1 bytes in 1 blocks
==953==      possibly lost: 0 bytes in 0 blocks
==953==    still reachable: 0 bytes in 0 blocks
==953==         suppressed: 0 bytes in 0 blocks
==953== 
==953== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)
--953-- 
--953-- used_suppression:      4 U1004-ARM-_dl_relocate_object
--953-- used_suppression:      2 glibc-2.5.x-on-SUSE-10.2-(PPC)-2a
==953== 
==953== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 6 from 6)

test 32 :: destroyStringArray(...)

   destroyStringArray(NULL, 0);
   // Pass conditional on no memory errors


7/32 testcases passed.
Overall mark is a FAIL.
]0;~/ECE264/solutions/demo/PA03
[32mvmanja@ecegrid-thin1 [33m~/ECE264/solutions/demo/PA03[0m
$ exit
exit

Script done on Thu 18 Sep 2014 04:27:30 AM EDT
